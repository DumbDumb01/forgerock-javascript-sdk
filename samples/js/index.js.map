{"version":3,"sources":["webpack://forgerock/webpack/universalModuleDefinition","webpack://forgerock/webpack/bootstrap","webpack://forgerock/./src/fr-auth/callbacks/index.ts","webpack://forgerock/./src/config/index.ts","webpack://forgerock/./node_modules/url/url.js","webpack://forgerock/./src/util/timeout.ts","webpack://forgerock/./src/fr-auth/enums.ts","webpack://forgerock/./src/oauth2-client/index.ts","webpack://forgerock/./src/token-storage/index.ts","webpack://forgerock/./src/util/pkce.ts","webpack://forgerock/./src/token-manager/index.ts","webpack://forgerock/./src/auth/index.ts","webpack://forgerock/./node_modules/querystring-es3/index.js","webpack://forgerock/./src/util/realm.ts","webpack://forgerock/./src/auth/enums.ts","webpack://forgerock/./src/event/index.ts","webpack://forgerock/./src/fr-auth/fr-login-failure.ts","webpack://forgerock/./src/fr-auth/fr-login-success.ts","webpack://forgerock/./src/fr-auth/fr-step.ts","webpack://forgerock/./src/fr-auth/callbacks/attribute-input-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/choice-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/confirmation-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/hidden-value-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/kba-create-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/metadata-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/name-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/password-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/polling-wait-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/recaptcha-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/terms-and-conditions-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/text-output-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/validated-create-password-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/validated-create-username-callback.ts","webpack://forgerock/./src/util/http.ts","webpack://forgerock/./src/user-manager/index.ts","webpack://forgerock/./src/index.ts","webpack://forgerock/./node_modules/node-libs-browser/node_modules/punycode/punycode.js","webpack://forgerock/(webpack)/buildin/module.js","webpack://forgerock/(webpack)/buildin/global.js","webpack://forgerock/./node_modules/url/util.js","webpack://forgerock/./node_modules/querystring-es3/decode.js","webpack://forgerock/./node_modules/querystring-es3/encode.js","webpack://forgerock/./src/config/constants.ts","webpack://forgerock/./src/fr-auth/index.ts","webpack://forgerock/./src/fr-policy/index.ts","webpack://forgerock/./src/fr-policy/enums.ts","webpack://forgerock/./src/util/strings.ts","webpack://forgerock/./src/fr-auth/callbacks/factory.ts","webpack://forgerock/./src/fr-user/index.ts","webpack://forgerock/./src/token-storage/constants.ts","webpack://forgerock/./src/oauth2-client/enums.ts","webpack://forgerock/./src/util/nonce.ts","webpack://forgerock/./src/http-client/index.ts","webpack://forgerock/./src/session-manager/index.ts","webpack://forgerock/./src/util/storage.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","payload","getType","this","type","getInputValue","selector","getArrayElement","input","setInputValue","getOutputValue","output","getOutputByName","entry","find","x","Error","array","length","FRCallback","DEFAULT_TIMEOUT","set","options","isValid","serverConfig","validateServerConfig","merged","baseUrl","timeout","url","charAt","Config","punycode","util","Url","protocol","slashes","auth","host","port","hostname","hash","search","query","pathname","path","href","parse","urlParse","resolve","source","relative","resolveObject","format","obj","isString","protocolPattern","portPattern","simplePathPattern","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","hostlessProtocol","slashedProtocol","querystring","parseQueryString","slashesDenoteHost","isObject","u","TypeError","queryIndex","indexOf","splitter","uSplit","split","replace","rest","join","trim","simplePath","exec","substr","proto","lowerProto","toLowerCase","match","atSign","hostEnd","hec","lastIndexOf","slice","decodeURIComponent","parseHost","ipv6Hostname","hostparts","part","newpart","j","k","charCodeAt","validParts","notHost","bit","push","unshift","toASCII","h","ae","esc","encodeURIComponent","escape","qm","keys","stringify","rel","result","tkeys","tk","tkey","rkeys","rk","rkey","v","relPath","shift","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","isNullOrUndefined","authInHost","isNull","last","hasTrailingSlash","up","splice","isAbsolute","withTimeout","promise","effectiveTimeout","Promise","race","_","reject","setTimeout","StepType","ResponseType","getAuthorizeUrl","clientId","redirectUri","scope","requestParams","client_id","redirect_uri","response_type","responseType","state","verifier","createChallenge","challenge","code_challenge","code_challenge_method","getUrl","iframe","document","createElement","onLoad","contentWindow","newHref","location","containsAuthCode","cleanUp","clearTimeout","removeEventListener","remove","style","display","addEventListener","body","appendChild","src","getOAuth2Tokens","code","authorizationCode","grant_type","code_verifier","init","headers","toString","method","request","undefined","response","getBody","responseBody","status","message","parseError","access_token","accessToken","idToken","id_token","refreshToken","refresh_token","getUserInfo","json","endSession","id_token_hint","isOkOr4xx","revokeToken","token","credentials","includeToken","Headers","fetch","test","contentType","text","error","error_description","OAuth2Client","getClientId","onError","event","logError","openReq","indexedDB","open","DB_NAME","onsuccess","objectStoreNames","contains","getReq","transaction","objectStore","TOKEN_KEY","tokens","getResult","onerror","onupgradeneeded","onSetSuccess","onUpgradeNeeded","createObjectStore","onOpenSuccess","version","close","txnReq","addReq","add","putReq","put","removeReq","delete","target","data","console","TokenStorage","createVerifier","size","Uint8Array","crypto","getRandomValues","base64UrlEncode","sha256","numbers","Array","btoa","String","fromCharCode","apply","uint8Array","TextEncoder","encode","subtle","digest","hashBuffer","PKCE","getTokens","forceRenew","authorizeUrlOptions","Code","authorizeUrl","parsedAuthorizeUrl","isArray","getTokensOptions","deleteTokens","TokenManager","next","previousStep","realmPath","tree","constructUrl","configureRequest","res","getResponseJson","getRealmUrlPath","step","JSON","accept","Auth","decode","names","map","filter","ErrorCode","CallbackType","callbacks","listener","container","index","clearEventListeners","forEach","clear","dispatchEvent","Dispatcher","LoginFailure","getCode","Number","getDetail","detail","getMessage","getProcessedMessage","messageCreator","parseErrors","getReason","reason","FRLoginFailure","LoginSuccess","getRealm","realm","getSessionToken","tokenId","getSuccessUrl","successUrl","FRLoginSuccess","callbackFactory","Step","convertCallbacks","getCallbackOfType","getCallbacksOfType","setCallbackValue","getDescription","description","getHeader","header","getStage","stage","FRStep","getName","getPrompt","isRequired","getPolicyKeys","getFailedPolicyKeys","setValue","AttributeInputCallback","getDefaultChoice","getChoices","setChoiceIndex","setChoiceValue","ChoiceCallback","getDefaultOption","getMessageType","getOptions","getOptionType","ConfirmationCallback","HiddenValueCallback","getPredefinedQuestions","setQuestion","question","setAnswer","answer","endsWith","KbaCreateCallback","getData","MetadataCallback","setName","NameCallback","setPassword","password","PasswordCallback","getWaitTime","PollingWaitCallback","getSiteKey","setResult","ReCaptchaCallback","getTerms","getVersion","getCreateDate","Date","setAccepted","TermsAndConditionsCallback","TextOutputCallback","ValidatedCreatePasswordCallback","ValidatedCreateUsernameCallback","ok","Math","floor","getCurrentUser","UserManager","FRAuth","FRUser","HttpClient","SessionManager","LocalStorage","nodeType","freeGlobal","global","self","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","stringFromCharCode","RangeError","fn","mapDomain","string","parts","ucs2decode","extra","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","out","basic","oldi","w","baseMinusT","codePoint","inputLength","bias","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","webpackPolyfill","deprecate","paths","children","g","Function","e","arg","prop","qs","sep","eq","regexp","maxKeys","len","kstr","vstr","idx","xs","stringifyPrimitive","isFinite","objectKeys","ks","f","nextPayload","authId","PolicyKey","err","failedPolicyRequirements","messages","parseFailedPolicyRequirement","failedPolicy","policyRequirements","policyRequirement","parsePolicyRequirement","policy","params","policyMessage","UnknownPolicy","FRPolicy","CannotContainCharacters","forbiddenChars","CannotContainDuplicates","duplicateValue","CannotContainOthers","disallowedFields","LeastCapitalLetters","numCaps","plural","LeastNumbers","numNums","MatchRegexp","MaximumLength","maxLength","MaximumNumber","MinimumLength","minLength","MinimumNumber","Required","Unique","ValidArrayItems","ValidDate","ValidEmailAddress","ValidNameFormat","ValidNumber","ValidPhoneFormat","ValidQueryFilter","ValidType","singularText","pluralText","callback","BooleanAttributeInputCallback","StringAttributeInputCallback","login","handler","info","loginWithUI","ui","getSession","logout","repeat","now","pow","_request","newTokenRequired","requiresNewToken","bypassAuthentication","realmUrlPath","persist","storage","localStorage","sessionStorage","getItem","setItem","removeItem"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"forgerock\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"forgerock\"] = factory();\n\telse\n\t\troot[\"forgerock\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 33);\n","import { Callback, NameValue } from '../../auth/interfaces';\n\n/**\n * Base class for authentication tree callback wrappers.\n */\nclass FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {}\n\n  /**\n   * Gets the name of this callback type.\n   */\n  public getType(): string {\n    return this.payload.type;\n  }\n\n  /**\n   * Gets the value of the specified input element, or the first element if `selector` is not\n   * provided.\n   *\n   * @param selector The index position or name of the desired element\n   */\n  public getInputValue(selector: number | string = 0) {\n    return this.getArrayElement(this.payload.input, selector).value;\n  }\n\n  /**\n   * Sets the value of the specified input element, or the first element if `selector` is not\n   * provided.\n   *\n   * @param selector The index position or name of the desired element\n   */\n  public setInputValue(value: any, selector: number | string = 0) {\n    this.getArrayElement(this.payload.input, selector).value = value;\n  }\n\n  /**\n   * Gets the value of the specified output element, or the first element if `selector` is not\n   * provided.\n   *\n   * @param selector The index position or name of the desired element\n   */\n  public getOutputValue(selector: number | string = 0) {\n    return this.getArrayElement(this.payload.output, selector).value;\n  }\n\n  /**\n   * Gets the first output element with the specified name.\n   *\n   * @deprecated Use `getOutputValue(name)` instead\n   * @param name The name of the desired element\n   */\n  public getOutputByName(name: string): NameValue {\n    const entry = this.payload.output.find((x) => x.name === name);\n    if (!entry) {\n      throw new Error(`Missing callback output entry \"${name}\"`);\n    }\n    return entry;\n  }\n\n  private getArrayElement(array: NameValue[], selector: number | string = 0) {\n    if (typeof selector === 'number') {\n      if (selector < 0 || selector > array.length - 1) {\n        throw new Error(`Selector index ${selector} is out of range`);\n      }\n      return array[selector];\n    }\n\n    if (typeof selector === 'string') {\n      const input = array.find((x) => x.name === selector);\n      if (!input) {\n        throw new Error(`Missing callback input entry \"${selector}\"`);\n      }\n      return input;\n    }\n\n    throw new Error('Invalid selector value type');\n  }\n}\n\nexport default FRCallback;\n","import { DEFAULT_TIMEOUT } from './constants';\nimport { ConfigOptions, ServerConfig, ValidConfigOptions } from './interfaces';\n\n/**\n * Utility for merging configuration defaults with one-off options.\n *\n * Example:\n *\n * ```js\n * // Establish configuration defaults\n * Config.set({\n *   clientId: 'myApp',\n *   serverConfig: { baseUrl: 'https://openam-domain.com/am' },\n *   tree: 'UsernamePassword'\n * });\n *\n * // Specify overrides as needed\n * const configOverrides = { tree: 'PasswordlessWebAuthn' };\n * const step = await FRAuth.next(undefined, configOverrides);\n */\nabstract class Config {\n  private static options: ConfigOptions;\n\n  /**\n   * Sets the default options.\n   *\n   * @param options The options to use as defaults\n   */\n  public static set(options: ConfigOptions) {\n    if (!this.isValid(options)) {\n      throw new Error('Configuration is invalid');\n    }\n    if (options.serverConfig) {\n      this.validateServerConfig(options.serverConfig);\n    }\n    this.options = { ...options };\n  }\n\n  /**\n   * Merges the provided options with the default options.  Ensures a server configuration exists.\n   *\n   * @param options The options to merge with defaults\n   */\n  public static get(options?: ConfigOptions): ValidConfigOptions {\n    if (!this.options && !options) {\n      throw new Error('Configuration has not been set');\n    }\n\n    const merged = { ...this.options, ...options };\n    if (!merged.serverConfig || !merged.serverConfig.baseUrl) {\n      throw new Error('Server configuration has not been set');\n    }\n\n    return merged as ValidConfigOptions;\n  }\n\n  private static isValid(options: ConfigOptions) {\n    return options && options.serverConfig;\n  }\n\n  private static validateServerConfig(serverConfig: ServerConfig) {\n    if (!serverConfig.timeout) {\n      serverConfig.timeout = DEFAULT_TIMEOUT;\n    }\n\n    const url = serverConfig.baseUrl;\n    if (url && url.charAt(url.length - 1) !== '/') {\n      serverConfig.baseUrl = url + '/';\n    }\n  }\n}\n\nexport default Config;\nexport { DEFAULT_TIMEOUT, ConfigOptions, ServerConfig, ValidConfigOptions };\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","import { DEFAULT_TIMEOUT } from '../config';\n\nfunction withTimeout<T>(promise: Promise<T>, timeout: number = DEFAULT_TIMEOUT) {\n  const effectiveTimeout = timeout || DEFAULT_TIMEOUT;\n  return Promise.race([\n    promise,\n    new Promise<T>((_, reject) => setTimeout(() => reject(new Error('Timeout')), effectiveTimeout)),\n  ]);\n}\n\nexport { withTimeout };\n","/**\n * Types of steps returned by the authentication tree.\n */\nenum StepType {\n  LoginFailure = 'LoginFailure',\n  LoginSuccess = 'LoginSuccess',\n  Step = 'Step',\n}\n\nexport { StepType };\n","import { stringify } from 'querystring';\nimport { resolve } from 'url';\nimport Config, { ConfigOptions } from '../config/index';\nimport TokenStorage from '../token-storage';\nimport { isOkOr4xx } from '../util/http';\nimport PKCE from '../util/pkce';\nimport { withTimeout } from '../util/timeout';\nimport { ResponseType } from './enums';\nimport { GetAuthorizationUrlOptions, GetOAuth2TokensOptions, OAuth2Tokens } from './interfaces';\n\n/**\n * OAuth 2.0 client.\n */\nabstract class OAuth2Client {\n  /**\n   * Gets the authorization URL configured in OpenAM, optionally using PKCE.\n   */\n  public static async getAuthorizeUrl(options: GetAuthorizationUrlOptions): Promise<string> {\n    const { serverConfig, clientId, redirectUri, scope } = Config.get(options);\n\n    /* eslint-disable @typescript-eslint/camelcase */\n    const requestParams: any = {\n      client_id: clientId,\n      redirect_uri: redirectUri,\n      response_type: options.responseType,\n      scope,\n      state: options.state,\n    };\n    /* eslint-enable @typescript-eslint/camelcase */\n\n    if (options.verifier) {\n      const challenge = await PKCE.createChallenge(options.verifier);\n      /* eslint-disable @typescript-eslint/camelcase */\n      requestParams.code_challenge = challenge;\n      requestParams.code_challenge_method = 'S256';\n      /* eslint-enable @typescript-eslint/camelcase */\n    }\n\n    const url = this.getUrl('authorize', requestParams, options);\n\n    return new Promise((resolve, reject) => {\n      const iframe = document.createElement('iframe');\n\n      const onLoad = () => {\n        if (iframe.contentWindow) {\n          const newHref = iframe.contentWindow.location.href;\n          if (this.containsAuthCode(newHref)) {\n            cleanUp();\n            resolve(newHref);\n          }\n        }\n      };\n\n      const cleanUp = () => {\n        clearTimeout(timeout);\n        iframe.removeEventListener('load', onLoad);\n        iframe.remove();\n      };\n\n      const timeout = setTimeout(() => {\n        cleanUp();\n        reject('Timeout');\n      }, serverConfig.timeout);\n\n      iframe.style.display = 'none';\n      iframe.addEventListener('load', onLoad);\n      document.body.appendChild(iframe);\n      iframe.src = url;\n    });\n  }\n\n  /**\n   * Exchanges an authorization code for OAuth tokens.\n   */\n  public static async getOAuth2Tokens(options: GetOAuth2TokensOptions): Promise<OAuth2Tokens> {\n    const { clientId, redirectUri } = Config.get(options);\n\n    /* eslint-disable @typescript-eslint/camelcase */\n    const requestParams: any = {\n      client_id: clientId,\n      code: options.authorizationCode,\n      grant_type: 'authorization_code',\n      redirect_uri: redirectUri,\n    };\n    /* eslint-enable @typescript-eslint/camelcase */\n\n    if (options.verifier) {\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      requestParams.code_verifier = options.verifier;\n    }\n\n    const body = stringify(requestParams);\n    const init = {\n      body,\n      headers: {\n        'content-length': body.length.toString(),\n        'content-type': 'application/x-www-form-urlencoded',\n      },\n      method: 'POST',\n    };\n\n    const response = await this.request('access_token', undefined, false, init, options);\n    const responseBody = await this.getBody(response);\n\n    if (response.status !== 200) {\n      const message = this.parseError(responseBody) || `Expected 200, received ${response.status}`;\n      throw new Error(message);\n    }\n\n    if (!responseBody.access_token) {\n      throw new Error('Access token not found in response');\n    }\n\n    return {\n      accessToken: responseBody.access_token,\n      idToken: responseBody.id_token,\n      refreshToken: responseBody.refresh_token,\n    };\n  }\n\n  /**\n   * Gets OIDC user information.\n   */\n  public static async getUserInfo(options?: ConfigOptions) {\n    const response = await this.request('userinfo', undefined, true, undefined, options);\n    if (response.status !== 200) {\n      throw new Error(`Failed to get user info; received ${response.status}`);\n    }\n\n    const json = await response.json();\n    return json;\n  }\n\n  /**\n   * Invokes the OIDC end session endpoint.\n   */\n  public static async endSession(options?: ConfigOptions) {\n    const { idToken } = await TokenStorage.get();\n\n    const query: any = {};\n    if (idToken) {\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      query.id_token_hint = idToken;\n    }\n\n    const response = await this.request('connect/endSession', query, true, undefined, options);\n    if (!isOkOr4xx(response)) {\n      throw new Error(`Failed to end session; received ${response.status}`);\n    }\n  }\n\n  /**\n   * Immediately revokes the stored access token.\n   */\n  public static async revokeToken(options?: ConfigOptions) {\n    const { clientId } = Config.get(options);\n    const { accessToken } = await TokenStorage.get();\n\n    const init: RequestInit = {\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      body: stringify({ client_id: clientId, token: accessToken }),\n      credentials: 'include',\n      headers: { 'content-type': 'application/x-www-form-urlencoded' },\n      method: 'POST',\n    };\n\n    const response = await this.request('token/revoke', undefined, false, init, options);\n    if (!isOkOr4xx(response)) {\n      throw new Error(`Failed to revoke token; received ${response.status}`);\n    }\n  }\n\n  private static async request(\n    path: string,\n    query?: any,\n    includeToken?: boolean,\n    init?: RequestInit,\n    options?: ConfigOptions,\n  ) {\n    const { serverConfig } = Config.get(options);\n    const url = this.getUrl(path, query, options);\n\n    init = init || ({} as RequestInit);\n\n    if (includeToken) {\n      const { accessToken } = await TokenStorage.get();\n      init.credentials = 'include';\n      init.headers = (init.headers || new Headers()) as Headers;\n      init.headers.set('authorization', `Bearer ${accessToken}`);\n    }\n\n    return await withTimeout(fetch(url, init), serverConfig.timeout);\n  }\n\n  private static containsAuthCode(url: string | null) {\n    return url && /code=([^&]+)/.test(url);\n  }\n\n  private static async getBody(response: Response) {\n    const contentType = response.headers.get('content-type');\n    if (contentType && contentType.indexOf('application/json') > -1) {\n      return await response.json();\n    }\n    return await response.text();\n  }\n\n  private static parseError(json: any): string | undefined {\n    if (json) {\n      if (json.error && json.error_description) {\n        return `${json.error}: ${json.error_description}`;\n      }\n      if (json.code && json.message) {\n        return `${json.code}: ${json.message}`;\n      }\n    }\n    return undefined;\n  }\n\n  private static getUrl(path: string, query?: any, options?: ConfigOptions): string {\n    const { serverConfig } = Config.get(options);\n    let url = resolve(serverConfig.baseUrl, `oauth2/${path}`);\n    if (query) {\n      url += `?${stringify(query)}`;\n    }\n    return url;\n  }\n}\n\nexport default OAuth2Client;\nexport { GetAuthorizationUrlOptions, GetOAuth2TokensOptions, OAuth2Tokens, ResponseType };\n","import Config from '../config/index';\nimport { Tokens } from '../shared/interfaces';\nimport { DB_NAME, TOKEN_KEY } from './constants';\n\n/**\n * Provides access to the token storage API.\n */\nabstract class TokenStorage {\n  /**\n   * Gets stored tokens.\n   */\n  public static async get(): Promise<Tokens> {\n    const clientId = this.getClientId();\n\n    return new Promise((resolve, reject) => {\n      const onError = (event: Event) => {\n        this.logError('get', event);\n        reject();\n      };\n\n      const openReq = window.indexedDB.open(DB_NAME);\n\n      openReq.onsuccess = () => {\n        if (!openReq.result.objectStoreNames.contains(clientId)) {\n          return resolve(undefined);\n        }\n\n        const getReq = openReq.result\n          .transaction(clientId, 'readonly')\n          .objectStore(clientId)\n          .get(TOKEN_KEY);\n\n        getReq.onsuccess = (event: Event) => {\n          const tokens = this.getResult<Tokens>(event);\n          resolve(tokens);\n        };\n\n        getReq.onerror = onError;\n      };\n\n      openReq.onupgradeneeded = () => {\n        resolve(undefined);\n      };\n\n      openReq.onerror = onError;\n    });\n  }\n\n  /**\n   * Saves tokens.\n   */\n  public static async set(tokens: Tokens): Promise<void> {\n    const clientId = this.getClientId();\n\n    return new Promise((resolve, reject) => {\n      const onSetSuccess = () => {\n        resolve();\n      };\n\n      const onError = (event: Event) => {\n        this.logError('set', event);\n        reject();\n      };\n\n      const onUpgradeNeeded = () => {\n        openReq.result.createObjectStore(clientId);\n      };\n\n      const onOpenSuccess = () => {\n        if (!openReq.result.objectStoreNames.contains(clientId)) {\n          const version = openReq.result.version + 1;\n          openReq.result.close();\n\n          openReq = window.indexedDB.open(DB_NAME, version);\n          openReq.onupgradeneeded = onUpgradeNeeded;\n          openReq.onsuccess = onOpenSuccess;\n          openReq.onerror = onError;\n          return;\n        }\n\n        const txnReq = openReq.result.transaction(clientId, 'readwrite');\n        txnReq.onerror = onError;\n        const objectStore = txnReq.objectStore(clientId);\n\n        const addReq = objectStore.add(tokens, TOKEN_KEY);\n        addReq.onsuccess = onSetSuccess;\n        addReq.onerror = () => {\n          const putReq = objectStore.put(tokens, TOKEN_KEY);\n          putReq.onsuccess = onSetSuccess;\n          putReq.onerror = onError;\n        };\n      };\n\n      let openReq = window.indexedDB.open(DB_NAME);\n      openReq.onupgradeneeded = onUpgradeNeeded;\n      openReq.onsuccess = onOpenSuccess;\n      openReq.onerror = onError;\n    });\n  }\n\n  /**\n   * Removes stored tokens.\n   */\n  public static async remove(): Promise<void> {\n    const clientId = this.getClientId();\n\n    return new Promise((resolve, reject) => {\n      const onError = (event: Event) => {\n        this.logError('remove', event);\n        reject();\n      };\n\n      const openReq = window.indexedDB.open(DB_NAME);\n\n      openReq.onsuccess = () => {\n        if (!openReq.result.objectStoreNames.contains(clientId)) {\n          return resolve();\n        }\n\n        const removeReq = openReq.result\n          .transaction(clientId, 'readwrite')\n          .objectStore(clientId)\n          .delete(TOKEN_KEY);\n\n        removeReq.onsuccess = () => {\n          resolve();\n        };\n\n        removeReq.onerror = onError;\n      };\n\n      openReq.onerror = onError;\n    });\n  }\n\n  private static getClientId() {\n    const { clientId } = Config.get();\n    if (!clientId) {\n      throw new Error('clientId is required to manage token storage');\n    }\n    return clientId;\n  }\n\n  private static getResult<T>(event: Event) {\n    return (event.target as any).result as T;\n  }\n\n  private static logError(key: string, data: any) {\n    const message = data.target && data.target.error ? data.target.error.message : event;\n    console.error(`TokenStorage:${key}`, message);\n  }\n}\n\nexport default TokenStorage;\n","/**\n * PKCE helper class for generating verifier and challenge.\n */\nabstract class PKCE {\n  /**\n   * Creates a random verifier.\n   *\n   * @param size The length of the verifier (default 32 characters)\n   */\n  public static createVerifier(size = 32): string {\n    const array = new Uint8Array(size);\n    window.crypto.getRandomValues(array);\n    const verifier = this.base64UrlEncode(array);\n    return verifier;\n  }\n\n  /**\n   * Creates a SDH-256 hash of the verifier.\n   *\n   * @param verifier The verifier to hash\n   */\n  public static async createChallenge(verifier: string): Promise<string> {\n    const sha256 = await this.sha256(verifier);\n    const challenge = this.base64UrlEncode(sha256);\n    return challenge;\n  }\n\n  /**\n   * Creates a base-64 encoded url-friendly version of the specified array.\n   *\n   * @param array The array of numbers to encode\n   */\n  public static base64UrlEncode(array: Uint8Array): string {\n    const numbers = Array.prototype.slice.call(array);\n    const ascii = window.btoa(String.fromCharCode.apply(null, numbers));\n    const urlEncoded = ascii\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .replace(/=/g, '');\n    return urlEncoded;\n  }\n\n  /**\n   * Creates a SHA-256 hash of the specified string.\n   *\n   * @param s The string to hash\n   */\n  public static async sha256(s: string): Promise<Uint8Array> {\n    const uint8Array = new TextEncoder().encode(s);\n    const hashBuffer = await window.crypto.subtle.digest('SHA-256', uint8Array);\n    const hashArray = new Uint8Array(hashBuffer);\n    return hashArray;\n  }\n}\n\nexport default PKCE;\n","import { parse as parseUrl } from 'url';\nimport { ConfigOptions } from '../config';\nimport OAuth2Client, { OAuth2Tokens, ResponseType } from '../oauth2-client';\nimport { Tokens } from '../shared/interfaces';\nimport TokenStorage from '../token-storage';\nimport nonce from '../util/nonce';\nimport PKCE from '../util/pkce';\n\ninterface GetTokensOptions extends ConfigOptions {\n  forceRenew?: boolean;\n}\n\nabstract class TokenManager {\n  public static async getTokens(options?: GetTokensOptions): Promise<OAuth2Tokens> {\n    let tokens: Tokens;\n\n    // Try to use stored tokens, if possible\n    if (!options || !options.forceRenew) {\n      try {\n        tokens = await TokenStorage.get();\n        if (tokens) {\n          return tokens;\n        }\n      } catch (error) {\n        console.error('Failed to retrieve stored tokens', error);\n      }\n    }\n\n    const verifier = PKCE.createVerifier();\n    const state = nonce()().toString();\n    const authorizeUrlOptions = { ...options, responseType: ResponseType.Code, state, verifier };\n    const authorizeUrl = await OAuth2Client.getAuthorizeUrl(authorizeUrlOptions);\n\n    const parsedAuthorizeUrl = parseUrl(authorizeUrl, true);\n    if (parsedAuthorizeUrl.query.state !== state) {\n      throw new Error('State mismatch');\n    }\n    if (!parsedAuthorizeUrl.query.code || Array.isArray(parsedAuthorizeUrl.query.code)) {\n      throw new Error('Failed to acquire authorization code');\n    }\n\n    const authorizationCode = parsedAuthorizeUrl.query.code;\n    const getTokensOptions = { ...options, authorizationCode, verifier };\n    tokens = await OAuth2Client.getOAuth2Tokens(getTokensOptions);\n\n    try {\n      await TokenStorage.set(tokens);\n    } catch (error) {\n      console.error('Failed to store tokens', error);\n    }\n\n    return tokens;\n  }\n\n  public static async deleteTokens() {\n    await TokenStorage.remove();\n  }\n}\n\nexport default TokenManager;\nexport { GetTokensOptions };\n","import { resolve } from 'url';\nimport Config, { ConfigOptions, ServerConfig } from '../config';\nimport { getRealmUrlPath } from '../util/realm';\nimport { withTimeout } from '../util/timeout';\nimport { Step } from './interfaces';\n\n/**\n * Provides direct access to the OpenAM authentication tree API.\n */\nabstract class Auth {\n  /**\n   * Gets the next step in the authentication tree.\n   *\n   * @param {Step} previousStep The previous step, including any required input.\n   * @param {ConfigOptions} options Configuration default overrides.\n   * @return {Step} The next step in the authentication tree.\n   */\n  public static async next(previousStep?: Step, options?: ConfigOptions): Promise<Step> {\n    const { realmPath, serverConfig, tree } = Config.get(options);\n    const url = this.constructUrl(serverConfig, realmPath, tree);\n    const init = this.configureRequest(previousStep);\n    const res = await withTimeout(fetch(url, init), serverConfig.timeout);\n    const json = await this.getResponseJson(res);\n    return json;\n  }\n\n  private static constructUrl(serverConfig: ServerConfig, realmPath?: string, tree?: string) {\n    const realmUrlPath = getRealmUrlPath(realmPath);\n    const query = tree ? `?authIndexType=service&authIndexValue=${tree}` : '';\n    const path = `json/${realmUrlPath}/authenticate${query}`;\n    const url = resolve(serverConfig.baseUrl, path);\n    return url;\n  }\n\n  private static configureRequest(step?: Step) {\n    const init: RequestInit = {\n      body: step ? JSON.stringify(step) : undefined,\n      credentials: 'include',\n      headers: {\n        accept: 'application/json',\n        'accept-api-version': 'protocol=1.0,resource=2.1',\n        'content-type': 'application/json',\n      },\n      method: 'POST',\n    };\n    return init;\n  }\n\n  private static async getResponseJson(res: Response) {\n    const contentType = res.headers.get('content-type');\n    const isJson = contentType && contentType.indexOf('application/json') > -1;\n    const json = isJson ? await res.json() : undefined;\n    return json;\n  }\n}\n\nexport default Auth;\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","function getRealmUrlPath(realmPath?: string) {\n  // Split the path and scrub segments\n  const names = (realmPath || '')\n    .split('/')\n    .map((x) => x.trim())\n    .filter((x) => x !== '');\n\n  // Ensure 'root' is the first realm\n  if (names[0] !== 'root') {\n    names.unshift('root');\n  }\n\n  // Concatenate into a URL path\n  const urlPath = names.map((x) => `realms/${x}`).join('/');\n  return urlPath;\n}\n\nexport { getRealmUrlPath };\n","/**\n * Known errors that can occur during authentication.\n */\nenum ErrorCode {\n  BadRequest = 'BAD_REQUEST',\n  Timeout = 'TIMEOUT',\n  Unauthorized = 'UNAUTHORIZED',\n  Unknown = 'UNKNOWN',\n}\n\n/**\n * Types of callbacks directly supported by the SDK.\n */\nenum CallbackType {\n  BooleanAttributeInputCallback = 'BooleanAttributeInputCallback',\n  ChoiceCallback = 'ChoiceCallback',\n  ConfirmationCallback = 'ConfirmationCallback',\n  HiddenValueCallback = 'HiddenValueCallback',\n  KbaCreateCallback = 'KbaCreateCallback',\n  MetadataCallback = 'MetadataCallback',\n  NameCallback = 'NameCallback',\n  PasswordCallback = 'PasswordCallback',\n  PollingWaitCallback = 'PollingWaitCallback',\n  ReCaptchaCallback = 'ReCaptchaCallback',\n  StringAttributeInputCallback = 'StringAttributeInputCallback',\n  TermsAndConditionsCallback = 'TermsAndConditionsCallback',\n  TextOutputCallback = 'TextOutputCallback',\n  ValidatedCreatePasswordCallback = 'ValidatedCreatePasswordCallback',\n  ValidatedCreateUsernameCallback = 'ValidatedCreateUsernameCallback',\n}\n\nexport { CallbackType, ErrorCode };\n","import { CallbackContainer, FREvent, Listener } from './interfaces';\n\n/**\n * Event dispatcher for subscribing and publishing categorized events.\n */\nclass Dispatcher {\n  private callbacks: CallbackContainer = {};\n\n  /**\n   * Subscribes to an event type.\n   *\n   * @param type The event type\n   * @param listener The function to subscribe to events of this type\n   */\n  public addEventListener(type: string, listener: Listener) {\n    add(this.callbacks, type, listener);\n  }\n\n  /**\n   * Unsubscribes from an event type.\n   *\n   * @param type The event type\n   * @param listener The function to unsubscribe from events of this type\n   */\n  public removeEventListener(type: string, listener: Listener) {\n    remove(this.callbacks, type, listener);\n  }\n\n  /**\n   * Unsubscribes all listener functions to a single event type or all event types.\n   *\n   * @param type The event type, or all event types if not specified\n   */\n  public clearEventListeners(type?: string) {\n    clear(this.callbacks, type);\n  }\n\n  /**\n   * Publishes an event.\n   *\n   * @param event The event object to publish\n   */\n  public dispatchEvent<T extends FREvent>(event: T) {\n    if (!this.callbacks[event.type]) {\n      return;\n    }\n    for (const listener of this.callbacks[event.type]) {\n      listener(event);\n    }\n  }\n}\n\n/** @hidden */\nfunction add(container: CallbackContainer, type: string, listener: Listener) {\n  container[type] = container[type] || [];\n  if (container[type].indexOf(listener) < 0) {\n    container[type].push(listener);\n  }\n}\n\n/** @hidden */\nfunction remove(container: CallbackContainer, type: string, listener: Listener) {\n  if (!container[type]) {\n    return;\n  }\n  const index = container[type].indexOf(listener);\n  if (index >= 0) {\n    container[type].splice(index, 1);\n  }\n}\n\n/** @hidden */\nfunction clear(container: CallbackContainer, type?: string) {\n  Object.keys(container).forEach((k: string) => {\n    if (!type || k === type) {\n      delete container[k];\n    }\n  });\n}\n\nexport default Dispatcher;\nexport { CallbackContainer, FREvent, Listener };\n","import FRPolicy from '../fr-policy';\nimport { MessageCreator, ProcessedPropertyError } from '../fr-policy/interfaces';\nimport { Step } from '../auth/interfaces';\nimport { StepType } from './enums';\nimport { AuthResponse, FailureDetail } from './interfaces';\n\nclass FRLoginFailure implements AuthResponse {\n  /**\n   * The type of step.\n   */\n  public readonly type = StepType.LoginFailure;\n\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Step) {}\n\n  /**\n   * Gets the error code.\n   */\n  public getCode(): number {\n    return Number(this.payload.code);\n  }\n\n  /**\n   * Gets the failure details.\n   */\n  public getDetail(): FailureDetail | undefined {\n    return this.payload.detail;\n  }\n\n  /**\n   * Gets the failure message.\n   */\n  public getMessage(): string | undefined {\n    return this.payload.message;\n  }\n\n  /**\n   * Gets processed failure message.\n   */\n  public getProcessedMessage(messageCreator?: MessageCreator): ProcessedPropertyError[] {\n    return FRPolicy.parseErrors(this.payload, messageCreator);\n  }\n\n  /**\n   * Gets the failure reason.\n   */\n  public getReason(): string | undefined {\n    return this.payload.reason;\n  }\n}\n\nexport default FRLoginFailure;\n","import { Step } from '../auth/interfaces';\nimport { StepType } from './enums';\nimport { AuthResponse } from './interfaces';\n\nclass FRLoginSuccess implements AuthResponse {\n  /**\n   * The type of step.\n   */\n  public readonly type = StepType.LoginSuccess;\n\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Step) {}\n\n  /**\n   * Gets the step's realm.\n   */\n  public getRealm() {\n    return this.payload.realm;\n  }\n\n  /**\n   * Gets the step's session token.\n   */\n  public getSessionToken() {\n    return this.payload.tokenId;\n  }\n\n  /**\n   * Gets the step's success URL.\n   */\n  public getSuccessUrl() {\n    return this.payload.successUrl;\n  }\n}\n\nexport default FRLoginSuccess;\n","import { CallbackType } from '../auth/enums';\nimport { Callback, Step } from '../auth/interfaces';\nimport FRCallback from './callbacks';\nimport createCallback, { FRCallbackFactory } from './callbacks/factory';\nimport { StepType } from './enums';\nimport { AuthResponse } from './interfaces';\n\n/**\n * Represents a single step of an authentication tree.\n */\nclass FRStep implements AuthResponse {\n  /**\n   * The type of step.\n   */\n  public readonly type = StepType.Step;\n\n  /**\n   * The callbacks contained in this step.\n   */\n  public callbacks: FRCallback[] = [];\n\n  /**\n   * @param payload The raw payload returned by OpenAM\n   * @param callbackFactory A function that returns am implementation of FRCallback\n   */\n  constructor(public payload: Step, callbackFactory?: FRCallbackFactory) {\n    if (payload.callbacks) {\n      this.callbacks = this.convertCallbacks(payload.callbacks, callbackFactory);\n    }\n  }\n\n  /**\n   * Gets the first callback of the specified type in this step.\n   *\n   * @param type The type of callback to find.\n   */\n  public getCallbackOfType<T extends FRCallback>(type: CallbackType): T {\n    const callbacks = this.getCallbacksOfType<T>(type);\n    if (callbacks.length !== 1) {\n      throw new Error(`Expected 1 callback of type \"${type}\", but found ${callbacks.length}`);\n    }\n    return callbacks[0];\n  }\n\n  /**\n   * Gets all callbacks of the specified type in this step.\n   *\n   * @param type The type of callback to find.\n   */\n  public getCallbacksOfType<T extends FRCallback>(type: CallbackType): T[] {\n    return this.callbacks.filter((x) => x.getType() === type) as T[];\n  }\n\n  /**\n   * Sets the value of the first callback of the specified type in this step.\n   *\n   * @param type The type of callback to find.\n   * @param value The value to set for the callback.\n   */\n  public setCallbackValue(type: CallbackType, value: any) {\n    const callbacks = this.getCallbacksOfType(type);\n    if (callbacks.length !== 1) {\n      throw new Error(`Expected 1 callback of type \"${type}\", but found ${callbacks.length}`);\n    }\n    callbacks[0].setInputValue(value);\n  }\n\n  /**\n   * Gets the step's description.\n   */\n  public getDescription() {\n    return this.payload.description;\n  }\n\n  /**\n   * Gets the step's header.\n   */\n  public getHeader() {\n    return this.payload.header;\n  }\n\n  /**\n   * Gets the step's stage.\n   */\n  public getStage() {\n    return this.payload.stage;\n  }\n\n  private convertCallbacks(callbacks: Callback[], callbackFactory?: FRCallbackFactory) {\n    const converted = callbacks.map((x: Callback) => {\n      // This gives preference to the provided factory and falls back to our default implementation\n      return (callbackFactory || createCallback)(x) || createCallback(x);\n    });\n    return converted;\n  }\n}\n\n/**\n * A function that can populate the provided authentication tree step.\n */\ntype FRStepHandler = (step: FRStep) => void;\n\nexport default FRStep;\nexport { FRStepHandler };\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to collect attributes.\n *\n * @typeparam T Maps to StringAttributeInputCallback and BooleanAttributeInputCallback, respectively\n */\nclass AttributeInputCallback<T extends string | boolean> extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the attribute name.\n   */\n  public getName(): string {\n    return this.getOutputValue('name');\n  }\n\n  /**\n   * Gets the attribute prompt.\n   */\n  public getPrompt(): string {\n    return this.getOutputValue('prompt');\n  }\n\n  /**\n   * Gets whether the attribute is required.\n   */\n  public isRequired(): boolean {\n    return this.getOutputValue('required');\n  }\n\n  /**\n   * Gets the attribute policy keys.\n   */\n  public getPolicyKeys(): string[] {\n    return this.getOutputValue('policies');\n  }\n\n  /**\n   * Gets the attribute policy keys that are not satisfied.\n   */\n  public getFailedPolicyKeys(): string[] {\n    return this.getOutputValue('failedPolicies');\n  }\n\n  /**\n   * Sets the attribute's value.\n   */\n  public setValue(value: T) {\n    this.setInputValue(value);\n  }\n}\n\nexport default AttributeInputCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to collect an answer to a choice.\n */\nclass ChoiceCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the choice's prompt.\n   */\n  public getPrompt(): string {\n    return this.getOutputValue('prompt');\n  }\n\n  /**\n   * Gets the choice's default answer.\n   */\n  public getDefaultChoice(): number {\n    return this.getOutputValue('defaultChoice');\n  }\n\n  /**\n   * Gets the choice's possible answers.\n   */\n  public getChoices(): string[] {\n    return this.getOutputValue('choices');\n  }\n\n  /**\n   * Sets the choice's answer by index position.\n   */\n  public setChoiceIndex(index: number) {\n    const length = this.getChoices().length;\n    if (index < 0 || index > length - 1) {\n      throw new Error(`${index} is out of bounds`);\n    }\n    this.setInputValue(index);\n  }\n\n  /**\n   * Sets the choice's answer by value.\n   */\n  public setChoiceValue(value: string) {\n    const index = this.getChoices().indexOf(value);\n    if (index === -1) {\n      throw new Error(`\"${value}\" is not a valid choice`);\n    }\n    this.setInputValue(index);\n  }\n}\n\nexport default ChoiceCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to collect a comfirmation to a message.\n */\nclass ConfirmationCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the index position of the confirmation's default answer.\n   */\n  public getDefaultOption(): number {\n    return Number(this.getOutputValue('defaultOption'));\n  }\n\n  /**\n   * Gets the confirmation's message type.\n   */\n  public getMessageType(): number {\n    return Number(this.getOutputValue('messageType'));\n  }\n\n  /**\n   * Gets the confirmation's possible answers.\n   */\n  public getOptions(): string[] {\n    return this.getOutputValue('options');\n  }\n\n  /**\n   * Gets the confirmation's option type.\n   */\n  public getOptionType(): number {\n    return Number(this.getOutputValue('optionType'));\n  }\n\n  /**\n   * Gets the confirmation's prompt.\n   */\n  public getPrompt(): string {\n    return this.getOutputValue('prompt');\n  }\n}\n\nexport default ConfirmationCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to collect information indirectly from the user.\n */\nclass HiddenValueCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n}\n\nexport default HiddenValueCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to collect KBA-style security questions and answers.\n */\nclass KbaCreateCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the callback prompt.\n   */\n  public getPrompt(): string {\n    return this.getOutputValue('prompt');\n  }\n\n  /**\n   * Gets the callback's list of pre-defined security questions.\n   */\n  public getPredefinedQuestions(): string[] {\n    return this.getOutputValue('predefinedQuestions');\n  }\n\n  /**\n   * Sets the callback's security question.\n   */\n  public setQuestion(question: string) {\n    this.setValue('question', question);\n  }\n\n  /**\n   * Sets the callback's security question answer.\n   */\n  public setAnswer(answer: string) {\n    this.setValue('answer', answer);\n  }\n\n  private setValue(type: 'question' | 'answer', value: string) {\n    const input = this.payload.input.find((x) => x.name.endsWith(type));\n    if (!input) {\n      throw new Error(`No input has name ending in \"${type}\"`);\n    }\n    input.value = value;\n  }\n}\n\nexport default KbaCreateCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to deliver and collect miscellaneous data.\n */\nclass MetadataCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the callback's data.\n   */\n  public getData<T>(): T {\n    return this.getOutputValue('data');\n  }\n}\n\nexport default MetadataCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to collect a username.\n */\nclass NameCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the callback's prompt.\n   */\n  public getPrompt(): string {\n    return this.getOutputValue('prompt');\n  }\n\n  /**\n   * Sets the username.\n   */\n  public setName(name: string) {\n    this.setInputValue(name);\n  }\n}\n\nexport default NameCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to collect a password.\n */\nclass PasswordCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the callback's prompt.\n   */\n  public getPrompt(): string {\n    return this.getOutputValue('prompt');\n  }\n\n  /**\n   * Sets the password.\n   */\n  public setPassword(password: string) {\n    this.setInputValue(password);\n  }\n}\n\nexport default PasswordCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to instruct the system to poll while a backend process completes.\n */\nclass PollingWaitCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the message to display while polling.\n   */\n  public getMessage(): string {\n    return this.getOutputValue('message');\n  }\n\n  /**\n   * Gets the polling interval in seconds.\n   */\n  public getWaitTime(): number {\n    return Number(this.getOutputValue('waitTime'));\n  }\n}\n\nexport default PollingWaitCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to integrate reCAPTCHA.\n */\nclass ReCaptchaCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the reCAPTCHA site key.\n   */\n  public getSiteKey(): string {\n    return this.getOutputValue('recaptchaSiteKey');\n  }\n\n  /**\n   * Sets the reCAPTCHA result.\n   */\n  public setResult(result: string) {\n    this.setInputValue(result);\n  }\n}\n\nexport default ReCaptchaCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to collect acceptance of terms and conditions.\n */\nclass TermsAndConditionsCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the terms and conditions content.\n   */\n  public getTerms(): string {\n    return this.getOutputValue('terms');\n  }\n\n  /**\n   * Gets the version of the terms and conditions.\n   */\n  public getVersion(): string {\n    return this.getOutputValue('version');\n  }\n\n  /**\n   * Gets the date of the terms and conditions.\n   */\n  public getCreateDate(): Date {\n    return new Date(this.getOutputValue('createDate'));\n  }\n\n  /**\n   * Sets the callback's acceptance to `true`.\n   */\n  public setAccepted() {\n    this.setInputValue(true);\n  }\n}\n\nexport default TermsAndConditionsCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to display a message.\n */\nclass TextOutputCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the message content.\n   */\n  public getMessage(): string {\n    return this.getOutputValue('message');\n  }\n\n  /**\n   * Gets the message type.\n   */\n  public getMessageType(): string {\n    return this.getOutputValue('messageType');\n  }\n}\n\nexport default TextOutputCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to collect a valid platform password.\n */\nclass ValidatedCreatePasswordCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the callback's prompt.\n   */\n  public getPrompt(): string {\n    return this.getOutputValue('prompt');\n  }\n\n  /**\n   * Gets whether the password is required.\n   */\n  public isRequired(): boolean {\n    return this.getOutputValue('required');\n  }\n\n  /**\n   * Gets the password policy keys.\n   */\n  public getPolicyKeys(): string[] {\n    return this.getOutputValue('policies');\n  }\n\n  /**\n   * Gets the password policy keys that are not satisfied.\n   */\n  public getFailedPolicyKeys(): string[] {\n    return this.getOutputValue('failedPolicies');\n  }\n\n  /**\n   * Sets the callback's password.\n   */\n  public setPassword(password: string) {\n    this.setInputValue(password);\n  }\n}\n\nexport default ValidatedCreatePasswordCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to collect a valid platform username.\n */\nclass ValidatedCreateUsernameCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the callback's prompt.\n   */\n  public getPrompt(): string {\n    return this.getOutputValue('prompt');\n  }\n\n  /**\n   * Gets whether the username is required.\n   */\n  public isRequired(): boolean {\n    return this.getOutputValue('required');\n  }\n\n  /**\n   * Gets the username policy keys.\n   */\n  public getPolicyKeys(): string[] {\n    return this.getOutputValue('policies');\n  }\n\n  /**\n   * Gets the username policy keys that are not satisfied.\n   */\n  public getFailedPolicyKeys(): string[] {\n    return this.getOutputValue('failedPolicies');\n  }\n\n  /**\n   * Sets the callback's username.\n   */\n  public setName(name: string) {\n    this.setInputValue(name);\n  }\n}\n\nexport default ValidatedCreateUsernameCallback;\n","function isOkOr4xx(response: Response) {\n  return response.ok || Math.floor(response.status / 100) === 4;\n}\n\nexport { isOkOr4xx };\n","import OAuth2Client from '../oauth2-client';\n\n/**\n * Provides access to the current user's profile.\n */\nabstract class UserManager {\n  /**\n   * Gets the current user's profile.\n   */\n  public static getCurrentUser() {\n    return OAuth2Client.getUserInfo();\n  }\n}\n\nexport default UserManager;\n","import Auth from './auth';\nimport { CallbackType, ErrorCode } from './auth/enums';\nimport { Callback, NameValue, Step, StepDetail } from './auth/interfaces';\nimport Config, { ConfigOptions, ValidConfigOptions } from './config';\nimport Dispatcher, { CallbackContainer, FREvent, Listener } from './event';\nimport FRAuth from './fr-auth';\nimport AttributeInputCallback from './fr-auth/callbacks/attribute-input-callback';\nimport ChoiceCallback from './fr-auth/callbacks/choice-callback';\nimport ConfirmationCallback from './fr-auth/callbacks/confirmation-callback';\nimport { FRCallbackFactory } from './fr-auth/callbacks/factory';\nimport HiddenValueCallback from './fr-auth/callbacks/hidden-value-callback';\nimport KbaCreateCallback from './fr-auth/callbacks/kba-create-callback';\nimport MetadataCallback from './fr-auth/callbacks/metadata-callback';\nimport NameCallback from './fr-auth/callbacks/name-callback';\nimport PasswordCallback from './fr-auth/callbacks/password-callback';\nimport PollingWaitCallback from './fr-auth/callbacks/polling-wait-callback';\nimport ReCaptchaCallback from './fr-auth/callbacks/recaptcha-callback';\nimport TermsAndConditionsCallback from './fr-auth/callbacks/terms-and-conditions-callback';\nimport TextOutputCallback from './fr-auth/callbacks/text-output-callback';\n// eslint-disable-next-line max-len\nimport ValidatedCreatePasswordCallback from './fr-auth/callbacks/validated-create-password-callback';\n// eslint-disable-next-line max-len\nimport ValidatedCreateUsernameCallback from './fr-auth/callbacks/validated-create-username-callback';\nimport { StepType } from './fr-auth/enums';\nimport FRLoginFailure from './fr-auth/fr-login-failure';\nimport FRLoginSuccess from './fr-auth/fr-login-success';\nimport FRStep, { FRStepHandler } from './fr-auth/fr-step';\nimport { AuthResponse, FailureDetail } from './fr-auth/interfaces';\nimport FRUI from './fr-ui';\nimport FRUser from './fr-user';\nimport HttpClient from './http-client';\nimport OAuth2Client, {\n  GetAuthorizationUrlOptions,\n  GetOAuth2TokensOptions,\n  OAuth2Tokens,\n  ResponseType,\n} from './oauth2-client';\nimport SessionManager from './session-manager';\nimport { Tokens } from './shared/interfaces';\nimport TokenManager, { GetTokensOptions } from './token-manager';\nimport TokenStorage from './token-storage';\nimport UserManager from './user-manager';\nimport PKCE from './util/pkce';\nimport LocalStorage from './util/storage';\n\nexport {\n  AttributeInputCallback,\n  Auth,\n  AuthResponse,\n  Callback,\n  CallbackContainer,\n  CallbackType,\n  ChoiceCallback,\n  Config,\n  ConfigOptions,\n  ConfirmationCallback,\n  Dispatcher,\n  ErrorCode,\n  FailureDetail,\n  FRAuth,\n  FRCallbackFactory,\n  FREvent,\n  FRLoginFailure,\n  FRLoginSuccess,\n  FRStep,\n  FRStepHandler,\n  FRUI,\n  FRUser,\n  GetAuthorizationUrlOptions,\n  GetOAuth2TokensOptions,\n  GetTokensOptions,\n  HiddenValueCallback,\n  HttpClient,\n  KbaCreateCallback,\n  Listener,\n  LocalStorage,\n  MetadataCallback,\n  NameCallback,\n  NameValue,\n  OAuth2Client,\n  OAuth2Tokens,\n  PasswordCallback,\n  PKCE,\n  PollingWaitCallback,\n  ReCaptchaCallback,\n  ResponseType,\n  SessionManager,\n  Step,\n  StepDetail,\n  StepType,\n  TermsAndConditionsCallback,\n  TextOutputCallback,\n  TokenManager,\n  Tokens,\n  TokenStorage,\n  UserManager,\n  ValidatedCreatePasswordCallback,\n  ValidatedCreateUsernameCallback,\n  ValidConfigOptions,\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","/** @hidden */\nconst DEFAULT_TIMEOUT = 5000;\n\nexport { DEFAULT_TIMEOUT };\n","import { ConfigOptions } from 'config';\nimport Auth from '../auth/index';\nimport FRLoginFailure from './fr-login-failure';\nimport FRLoginSuccess from './fr-login-success';\nimport FRStep from './fr-step';\n\n/**\n * Provides access to the OpenAM authentication tree API.\n *\n * Call `FRAuth.next()` recursively.  At each step, check for session token or error, otherwise\n * populate the step's callbacks and call `next()` again.\n *\n * Example:\n *\n * ```js\n * async function nextStep(previousStep) {\n *   const thisStep = await FRAuth.next(previousStep);\n *\n *   switch (thisStep.type) {\n *     case StepType.LoginSuccess:\n *       const token = thisStep.getSessionToken();\n *       break;\n *     case StepType.LoginFailure:\n *       const detail = thisStep.getDetail();\n *       break;\n *     case StepType.Step:\n *       // Populate `thisStep` callbacks here, and then continue\n *       thisStep.setInputValue('foo');\n *       nextStep(thisStep);\n *       break;\n *   }\n * }\n * ```\n */\nabstract class FRAuth {\n  /**\n   * Requests the next step in the authentication tree.\n   *\n   * @param previousStep The previous step with its callback values populated\n   * @param options Configuration overrides\n   * @return The next step in the authentication tree\n   */\n  public static async next(\n    previousStep?: FRStep,\n    options?: ConfigOptions,\n  ): Promise<FRStep | FRLoginSuccess | FRLoginFailure> {\n    const nextPayload = await Auth.next(previousStep ? previousStep.payload : undefined, options);\n\n    if (nextPayload.tokenId) {\n      return new FRLoginSuccess(nextPayload);\n    }\n\n    if (nextPayload.authId) {\n      const callbackFactory = options ? options.callbackFactory : undefined;\n      return new FRStep(nextPayload, callbackFactory);\n    }\n\n    return new FRLoginFailure(nextPayload);\n  }\n}\n\nexport default FRAuth;\n","import { Step } from '../auth/interfaces';\nimport { FailedPolicyRequirement, PolicyRequirement } from '../auth/interfaces';\nimport { PolicyKey, policyMessage } from './enums';\nimport { MessageCreator, ProcessedPropertyError } from './interfaces';\n\n/**\n * Utility for processing policy failures into human readable messages.\n *\n * Example:\n *\n * ```js\n * // Create message overrides and extensions as needed\n * const messageCreator = {\n *   [PolicyKey.unique]: (property: string) => (\n *     `this is a custom message for \"UNIQUE\" policy of ${property}`\n *   ),\n *   CUSTOM_POLICY: (property: string, params: any) => (\n *     `this is a custom message for \"${params.policyRequirement}\" policy of ${property}`\n *   ),\n * };\n *\n * const thisStep = await FRAuth.next(previousStep);\n *\n * if (thisStep.type === StepType.LoginFailure) {\n *   const messagesStepMethod = thisStep.getProcessedMessage(messageCreator);\n *   const messagesClassMethod = FRPolicy.parseErrors(thisStep, messageCreator)\n * }\n */\nabstract class FRPolicy {\n  /**\n   * Parses policy errors and generates human readable error messages.\n   *\n   * @param {Step} err The step containing the error.\n   * @param {MessageCreator} messageCreator\n   * Extensible and overridable custom error messages for policy failures.\n   * @return {ProcessedPropertyError[]} Array of objects containing all processed policy errors.\n   */\n  public static parseErrors(\n    err: Partial<Step>,\n    messageCreator?: MessageCreator,\n  ): ProcessedPropertyError[] {\n    const errors: ProcessedPropertyError[] = [];\n    if (err.detail && err.detail.failedPolicyRequirements) {\n      err.detail.failedPolicyRequirements.map((x) => {\n        errors.push.apply(errors, [\n          {\n            detail: x,\n            messages: this.parseFailedPolicyRequirement(x, messageCreator),\n          },\n        ]);\n      });\n    }\n    return errors;\n  }\n\n  /**\n   * Parses a failed policy and returns a string array of error messages.\n   *\n   * @param {FailedPolicyRequirement} failedPolicy The detail data of the failed policy.\n   * @param {MessageCreator} customMessage\n   * Extensible and overridable custom error messages for policy failures.\n   * @return {string[]} Array of strings with all processed policy errors.\n   */\n  public static parseFailedPolicyRequirement(\n    failedPolicy: FailedPolicyRequirement,\n    messageCreator?: MessageCreator,\n  ): string[] {\n    const errors: string[] = [];\n    failedPolicy.policyRequirements.map((policyRequirement) => {\n      errors.push(\n        this.parsePolicyRequirement(failedPolicy.property, policyRequirement, messageCreator),\n      );\n    });\n    return errors;\n  }\n\n  /**\n   * Parses a policy error into a human readable error message.\n   *\n   * @param {string} property The property with the policy failure.\n   * @param {PolicyRequirement} policy The policy failure data.\n   * @param {MessageCreator} customMessage\n   * Extensible and overridable custom error messages for policy failures.\n   * @return {string} Human readable error message.\n   */\n  public static parsePolicyRequirement(\n    property: string,\n    policy: PolicyRequirement,\n    messageCreator: MessageCreator = {},\n  ): string {\n    const policyRequirement = policy.policyRequirement;\n    const params = policy.params ? { ...policy.params, policyRequirement } : { policyRequirement };\n    const message = (\n      messageCreator[policyRequirement] ||\n      policyMessage[policyRequirement] ||\n      policyMessage[PolicyKey.UnknownPolicy]\n      )(property, params);\n\n    return message;\n  }\n}\n\nexport default FRPolicy;\nexport { PolicyKey, MessageCreator, ProcessedPropertyError };\n","import { PolicyParams } from '../auth/interfaces';\nimport { plural } from '../util/strings';\nimport { MessageCreator } from './interfaces';\n\nenum PolicyKey {\n  CannotContainCharacters = 'CANNOT_CONTAIN_CHARACTERS',\n  CannotContainDuplicates = 'CANNOT_CONTAIN_DUPLICATES',\n  CannotContainOthers = 'CANNOT_CONTAIN_OTHERS',\n  LeastCapitalLetters = 'AT_LEAST_X_CAPITAL_LETTERS',\n  LeastNumbers = 'AT_LEAST_X_NUMBERS',\n  MatchRegexp = 'MATCH_REGEXP',\n  MaximumLength = 'MAX_LENGTH',\n  MaximumNumber = 'MAXIMUM_NUMBER_VALUE',\n  MinimumLength = 'MIN_LENGTH',\n  MinimumNumber = 'MINIMUM_NUMBER_VALUE',\n  Required = 'REQUIRED',\n  Unique = 'UNIQUE',\n  UnknownPolicy = 'UNKNOWN_POLICY',\n  ValidArrayItems = 'VALID_ARRAY_ITEMS',\n  ValidDate = 'VALID_DATE',\n  ValidEmailAddress = 'VALID_EMAIL_ADDRESS_FORMAT',\n  ValidNameFormat = 'VALID_NAME_FORMAT',\n  ValidNumber = 'VALID_NUMBER',\n  ValidPhoneFormat = 'VALID_PHONE_FORMAT',\n  ValidQueryFilter = 'VALID_QUERY_FILTER',\n  ValidType = 'VALID_TYPE',\n}\n\nconst policyMessage: MessageCreator = {\n  [PolicyKey.CannotContainCharacters]: (\n    property: string,\n    params: Pick<PolicyParams, 'forbiddenChars'>,\n  ) => {\n    const forbiddenChars: string = params.forbiddenChars;\n    return `${property} must not contain following characters: \"${forbiddenChars}\"`;\n  },\n  [PolicyKey.CannotContainDuplicates]: (\n    property: string,\n    params: Pick<PolicyParams, 'duplicateValue'>,\n  ) => {\n    const duplicateValue: string = params.duplicateValue;\n    return `${property}  must not contain duplicates: \"${duplicateValue}\"`;\n  },\n  [PolicyKey.CannotContainOthers]: (\n    property: string,\n    params: Pick<PolicyParams, 'disallowedFields'>,\n  ) => {\n    const disallowedFields: string = params.disallowedFields;\n    return `${property} must not contain: \"${disallowedFields}\"`;\n  },\n  [PolicyKey.LeastCapitalLetters]: (property: string, params: Pick<PolicyParams, 'numCaps'>) => {\n    const numCaps: number = params.numCaps;\n    return `${property} must contain at least ${numCaps} capital ${plural(numCaps, 'letter')}`;\n  },\n  [PolicyKey.LeastNumbers]: (property: string, params: Pick<PolicyParams, 'numNums'>) => {\n    const numNums: number = params.numNums;\n    return `${property} must contain at least ${numNums} numeric ${plural(numNums, 'value')}`;\n  },\n  [PolicyKey.MatchRegexp]: (property: string) => `${property} has failed the \"MATCH_REGEXP\" policy`,\n  [PolicyKey.MaximumLength]: (property: string, params: Pick<PolicyParams, 'maxLength'>) => {\n    const maxLength: number = params.maxLength;\n    return `${property} must be at most ${maxLength} ${plural(maxLength, 'character')}`;\n  },\n  [PolicyKey.MaximumNumber]: (property: string) =>\n    `${property} has failed the \"MAXIMUM_NUMBER_VALUE\" policy`,\n  [PolicyKey.MinimumLength]: (property: string, params: Pick<PolicyParams, 'minLength'>) => {\n    const minLength: number = params.minLength;\n    return `${property} must be at least ${minLength} ${plural(minLength, 'character')}`;\n  },\n  [PolicyKey.MinimumNumber]: (property: string) =>\n    `${property} has failed the \"MINIMUM_NUMBER_VALUE\" policy`,\n  [PolicyKey.Required]: (property: string) => `${property} is required`,\n  [PolicyKey.Unique]: (property: string) => `${property} must be unique`,\n  [PolicyKey.UnknownPolicy]: (property: string, params: { policyRequirement: string }) =>\n    `${property}: Unknown policy requirement \"${params.policyRequirement}\"`,\n  [PolicyKey.ValidArrayItems]: (property: string) =>\n    `${property} has failed the \"VALID_ARRAY_ITEMS\" policy`,\n  [PolicyKey.ValidDate]: (property: string) => `${property} has an invalid date`,\n  [PolicyKey.ValidEmailAddress]: (property: string) => `${property} has an invalid email address`,\n  [PolicyKey.ValidNameFormat]: (property: string) => `${property} has an invalid name format`,\n  [PolicyKey.ValidNumber]: (property: string) => `${property} has an invalid number`,\n  [PolicyKey.ValidPhoneFormat]: (property: string) => `${property} has an invalid phone number`,\n  [PolicyKey.ValidQueryFilter]: (property: string) =>\n    `${property} has failed the \"VALID_QUERY_FILTER\" policy`,\n  [PolicyKey.ValidType]: (property: string) => `${property} has failed the \"VALID_TYPE\" policy`,\n};\n\nexport { PolicyKey, policyMessage };\n","export function plural(n: number, singularText: string, pluralText?: string) {\n  if (n === 1) {\n    return singularText;\n  }\n  return pluralText !== undefined ? pluralText : singularText + 's';\n}\n","import FRCallback from '.';\nimport { CallbackType } from '../../auth/enums';\nimport { Callback } from '../../auth/interfaces';\nimport AttributeInputCallback from './attribute-input-callback';\nimport ChoiceCallback from './choice-callback';\nimport ConfirmationCallback from './confirmation-callback';\nimport HiddenValueCallback from './hidden-value-callback';\nimport KbaCreateCallback from './kba-create-callback';\nimport MetadataCallback from './metadata-callback';\nimport NameCallback from './name-callback';\nimport PasswordCallback from './password-callback';\nimport PollingWaitCallback from './polling-wait-callback';\nimport ReCaptchaCallback from './recaptcha-callback';\nimport TermsAndConditionsCallback from './terms-and-conditions-callback';\nimport TextOutputCallback from './text-output-callback';\nimport ValidatedCreatePasswordCallback from './validated-create-password-callback';\nimport ValidatedCreateUsernameCallback from './validated-create-username-callback';\n\ntype FRCallbackFactory = (callback: Callback) => FRCallback;\n\n/**\n * @hidden\n */\nfunction createCallback(callback: Callback) {\n  switch (callback.type) {\n    case CallbackType.BooleanAttributeInputCallback:\n      return new AttributeInputCallback<boolean>(callback);\n    case CallbackType.ChoiceCallback:\n      return new ChoiceCallback(callback);\n    case CallbackType.ConfirmationCallback:\n      return new ConfirmationCallback(callback);\n    case CallbackType.HiddenValueCallback:\n      return new HiddenValueCallback(callback);\n    case CallbackType.KbaCreateCallback:\n      return new KbaCreateCallback(callback);\n    case CallbackType.MetadataCallback:\n      return new MetadataCallback(callback);\n    case CallbackType.NameCallback:\n      return new NameCallback(callback);\n    case CallbackType.PasswordCallback:\n      return new PasswordCallback(callback);\n    case CallbackType.PollingWaitCallback:\n      return new PollingWaitCallback(callback);\n    case CallbackType.ReCaptchaCallback:\n      return new ReCaptchaCallback(callback);\n    case CallbackType.StringAttributeInputCallback:\n      return new AttributeInputCallback<string>(callback);\n    case CallbackType.TermsAndConditionsCallback:\n      return new TermsAndConditionsCallback(callback);\n    case CallbackType.TextOutputCallback:\n      return new TextOutputCallback(callback);\n    case CallbackType.ValidatedCreatePasswordCallback:\n      return new ValidatedCreatePasswordCallback(callback);\n    case CallbackType.ValidatedCreateUsernameCallback:\n      return new ValidatedCreateUsernameCallback(callback);\n    default:\n      return new FRCallback(callback);\n  }\n}\n\nexport default createCallback;\nexport { FRCallbackFactory };\n","import { ConfigOptions } from '../config';\nimport FRStep, { FRStepHandler } from '../fr-auth/fr-step';\nimport FRUI from '../fr-ui';\nimport OAuth2Client from '../oauth2-client';\nimport TokenManager from '../token-manager';\nimport UserManager from '../user-manager';\n\n/**\n * High-level API for logging a user in/out and getting profile information.\n */\nabstract class FRUser {\n  /**\n   * Logs the user in with the specified step handler, acquires OAuth tokens, and retrieves\n   * user profile.  **Currently not implemented.**\n   *\n   * @typeparam T The type of user object expected\n   * @param handler The function to invoke when handling authentication steps\n   * @param options Configuration overrides\n   */\n  public static async login<T>(\n    handler: FRStepHandler,\n    options?: ConfigOptions,\n  ): Promise<FRStep | T> {\n    console.info(handler, options); // Avoid lint errors\n    throw new Error('FRUser.login() not implemented');\n  }\n\n  /**\n   * Logs the user in with the specified UI, acquires OAuth tokens, and retrieves user profile.\n   *\n   * @typeparam T The type of user object expected\n   * @param ui The UI instance to use to acquire a session\n   * @param options Configuration overrides\n   */\n  public static async loginWithUI<T>(ui: FRUI, options?: ConfigOptions): Promise<T> {\n    try {\n      await ui.getSession(options);\n      await TokenManager.getTokens({ forceRenew: true });\n      const currentUser = await UserManager.getCurrentUser();\n      return currentUser as T;\n    } catch (error) {\n      throw new Error('Login failed');\n    }\n  }\n\n  /**\n   * Ends the user's session and revokes OAuth tokens.\n   *\n   * @param options Configuration overrides\n   */\n  public static async logout(options?: ConfigOptions) {\n    try {\n      // TODO: Determine if we're using logout() or endSession(). logout() removes\n      //       the cookie, but fails with CORS issues currently.\n      // await SessionManager.logout();\n      await OAuth2Client.endSession(options);\n      await OAuth2Client.revokeToken(options);\n      await TokenManager.deleteTokens();\n    } catch (error) {\n      throw new Error('Logout failed');\n    }\n  }\n}\n\nexport default FRUser;\n","/** @hidden */\nconst DB_NAME = 'forgerock-sdk';\n\n/** @hidden */\nconst TOKEN_KEY = 'tokens';\n\nexport { DB_NAME, TOKEN_KEY };\n","/**\n * Specifies the type of OAuth flow to invoke.\n */\nenum ResponseType {\n  Code = 'code',\n  Token = 'token',\n}\n\nexport { ResponseType };\n","function nonce(length = 15): () => number {\n  let last = -1;\n  let repeat = 0;\n\n  if (length < 4 || length > 15) {\n    throw new Error('Invalid nonce length');\n  }\n\n  return () => {\n    const now = Math.pow(10, 2) * +new Date();\n\n    if (now === last) {\n      repeat++;\n    } else {\n      repeat = 0;\n      last = now;\n    }\n\n    const s = (now + repeat).toString();\n    return +s.substr(s.length - length);\n  };\n}\n\nexport default nonce;\n","import Dispatcher from '../event';\nimport TokenManager from '../token-manager';\nimport { withTimeout } from '../util/timeout';\nimport { HttpClientRequestOptions, RequiresNewTokenFn } from './interfaces';\n\n/**\n * HTTP client that includes bearer token injection and refresh.\n */\nabstract class HttpClient extends Dispatcher {\n  /**\n   * Makes a request using the specified options.\n   *\n   * @param options The options to use when making the request\n   */\n  public static async request(options: HttpClientRequestOptions): Promise<Response> {\n    let res = await this._request(options, false);\n    if (this.newTokenRequired(res, options.requiresNewToken)) {\n      res = await this._request(options, true);\n    }\n    return res;\n  }\n\n  private static async _request(\n    options: HttpClientRequestOptions,\n    forceRenew: boolean,\n  ): Promise<Response> {\n    const { url, init, timeout } = options;\n    const headers = new Headers(init.headers);\n    if (!options.bypassAuthentication) {\n      const tokens = await TokenManager.getTokens({ forceRenew });\n      headers.set('authorization', `Bearer ${tokens.accessToken}`);\n    }\n    init.headers = headers;\n    return await withTimeout(fetch(url, init), timeout);\n  }\n\n  private static newTokenRequired(res: Response, requiresNewToken?: RequiresNewTokenFn) {\n    if (typeof requiresNewToken === 'function') {\n      return requiresNewToken(res);\n    }\n    return res.status === 401;\n  }\n}\n\nexport default HttpClient;\nexport { HttpClientRequestOptions, RequiresNewTokenFn };\n","import { resolve } from 'url';\nimport Config, { ConfigOptions } from '../config/index';\nimport { isOkOr4xx } from '../util/http';\nimport { getRealmUrlPath } from '../util/realm';\nimport { withTimeout } from '../util/timeout';\n\n/**\n * Provides access to the session management API.\n */\nabstract class SessionManager {\n  /**\n   * Ends the current session.\n   */\n  public static async logout(options?: ConfigOptions) {\n    const { realmPath, serverConfig } = Config.get(options);\n    const init: RequestInit = {\n      credentials: 'include',\n      method: 'POST',\n    };\n\n    const realmUrlPath = getRealmUrlPath(realmPath);\n    const url = resolve(serverConfig.baseUrl, `json/${realmUrlPath}/sessions/?_action=logout`);\n\n    const response = await withTimeout(fetch(url, init), serverConfig.timeout);\n    if (!isOkOr4xx(response)) {\n      throw new Error(`Failed to log out; received ${response.status}`);\n    }\n  }\n}\n\nexport default SessionManager;\n","class LocalStorage {\n  private storage: Storage;\n  constructor(persist = false) {\n    this.storage = persist ? window.localStorage : window.sessionStorage;\n  }\n\n  public get<T>(key: string): T | undefined {\n    const value = this.storage.getItem(key);\n    if (!value) {\n      return undefined;\n    }\n\n    return JSON.parse(value);\n  }\n\n  public set<T>(key: string, value: T) {\n    this.storage.setItem(key, JSON.stringify(value));\n  }\n\n  public remove(key: string) {\n    this.storage.removeItem(key);\n  }\n}\n\nexport default LocalStorage;\n"],"sourceRoot":""}