{"version":3,"sources":["webpack://forgerock/webpack/universalModuleDefinition","webpack://forgerock/webpack/bootstrap","webpack://forgerock/./src/fr-auth/callbacks/index.ts","webpack://forgerock/./src/config/index.ts","webpack://forgerock/./src/fr-auth/enums.ts","webpack://forgerock/./src/oauth2-client/index.ts","webpack://forgerock/./node_modules/url/url.js","webpack://forgerock/./src/util/timeout.ts","webpack://forgerock/./src/token-storage/index.ts","webpack://forgerock/./src/util/pkce.ts","webpack://forgerock/./src/token-manager/index.ts","webpack://forgerock/./src/auth/index.ts","webpack://forgerock/./node_modules/querystring-es3/index.js","webpack://forgerock/./src/auth/enums.ts","webpack://forgerock/./src/event/index.ts","webpack://forgerock/./src/fr-auth/fr-login-failure.ts","webpack://forgerock/./src/fr-auth/fr-login-success.ts","webpack://forgerock/./src/fr-auth/fr-step.ts","webpack://forgerock/./src/fr-auth/callbacks/attribute-input-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/choice-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/confirmation-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/hidden-value-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/kba-create-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/metadata-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/name-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/password-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/polling-wait-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/recaptcha-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/terms-and-conditions-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/text-output-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/validated-create-password-callback.ts","webpack://forgerock/./src/fr-auth/callbacks/validated-create-username-callback.ts","webpack://forgerock/./src/user-manager/index.ts","webpack://forgerock/./src/index.ts","webpack://forgerock/./node_modules/node-libs-browser/node_modules/punycode/punycode.js","webpack://forgerock/(webpack)/buildin/module.js","webpack://forgerock/(webpack)/buildin/global.js","webpack://forgerock/./node_modules/url/util.js","webpack://forgerock/./node_modules/querystring-es3/decode.js","webpack://forgerock/./node_modules/querystring-es3/encode.js","webpack://forgerock/./src/config/constants.ts","webpack://forgerock/./src/util/realm.ts","webpack://forgerock/./src/fr-auth/index.ts","webpack://forgerock/./src/fr-auth/callbacks/factory.ts","webpack://forgerock/./src/fr-user/index.ts","webpack://forgerock/./src/token-storage/constants.ts","webpack://forgerock/./src/util/http.ts","webpack://forgerock/./src/oauth2-client/enums.ts","webpack://forgerock/./src/util/nonce.ts","webpack://forgerock/./src/http-client/index.ts","webpack://forgerock/./src/util/storage.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","payload","getType","this","type","getInputValue","selector","getArrayElement","input","setInputValue","getOutputValue","output","getOutputByName","entry","find","x","Error","array","length","FRCallback","DEFAULT_TIMEOUT","set","options","isValid","serverConfig","setTimeout","validateBaseUrl","merged","baseUrl","timeout","url","charAt","Config","StepType","ResponseType","getAuthorizeUrl","clientId","redirectUri","scope","requestParams","client_id","redirect_uri","response_type","responseType","state","verifier","createChallenge","challenge","code_challenge","code_challenge_method","getUrl","Promise","resolve","reject","iframe","document","createElement","onLoad","contentWindow","newHref","location","href","containsAuthCode","cleanUp","clearTimeout","removeEventListener","remove","style","display","addEventListener","body","appendChild","src","getOAuth2Tokens","code","authorizationCode","grant_type","code_verifier","stringify","init","headers","toString","method","request","undefined","response","getBody","responseBody","status","message","parseError","access_token","accessToken","idToken","id_token","refreshToken","refresh_token","getUserInfo","json","endSession","query","id_token_hint","isOkOr4xx","revokeToken","token","credentials","path","includeToken","Headers","withTimeout","fetch","test","contentType","indexOf","text","error","error_description","OAuth2Client","punycode","util","Url","protocol","slashes","auth","host","port","hostname","hash","search","pathname","parse","urlParse","source","relative","resolveObject","format","obj","isString","protocolPattern","portPattern","simplePathPattern","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","hostlessProtocol","slashedProtocol","querystring","parseQueryString","slashesDenoteHost","isObject","u","TypeError","queryIndex","splitter","uSplit","split","replace","rest","join","trim","simplePath","exec","substr","proto","lowerProto","toLowerCase","match","atSign","hostEnd","hec","lastIndexOf","slice","decodeURIComponent","parseHost","ipv6Hostname","hostparts","part","newpart","j","k","charCodeAt","validParts","notHost","bit","push","unshift","toASCII","h","ae","esc","encodeURIComponent","escape","qm","keys","rel","result","tkeys","tk","tkey","rkeys","rk","rkey","v","relPath","shift","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","isNullOrUndefined","authInHost","isNull","last","hasTrailingSlash","up","splice","isAbsolute","promise","effectiveTimeout","race","_","getClientId","onError","event","logError","openReq","indexedDB","open","DB_NAME","onsuccess","objectStoreNames","contains","getReq","transaction","objectStore","TOKEN_KEY","tokens","getResult","onerror","onupgradeneeded","onSetSuccess","onUpgradeNeeded","createObjectStore","onOpenSuccess","version","close","txnReq","addReq","add","putReq","put","removeReq","delete","target","data","console","TokenStorage","createVerifier","size","Uint8Array","crypto","getRandomValues","base64UrlEncode","sha256","numbers","Array","btoa","String","fromCharCode","apply","uint8Array","TextEncoder","encode","subtle","digest","hashBuffer","PKCE","getTokens","forceRenew","authorizeUrlOptions","Code","authorizeUrl","parsedAuthorizeUrl","isArray","getTokensOptions","deleteTokens","TokenManager","next","previousStep","realmPath","tree","constructUrl","configureRequest","res","getResponseJson","getRealmUrlPath","step","JSON","accept","Auth","decode","ErrorCode","CallbackType","callbacks","listener","container","index","clearEventListeners","forEach","clear","dispatchEvent","Dispatcher","LoginFailure","getCode","Number","getDetail","detail","getMessage","getReason","reason","FRLoginFailure","LoginSuccess","getRealm","realm","getSessionToken","tokenId","getSuccessUrl","successUrl","FRLoginSuccess","callbackFactory","Step","convertCallbacks","getCallbackOfType","getCallbacksOfType","filter","setCallbackValue","getDescription","description","getHeader","header","getStage","stage","map","FRStep","getName","getPrompt","isRequired","getPolicyKeys","getFailedPolicyKeys","setValue","AttributeInputCallback","getDefaultChoice","getChoices","setChoiceIndex","setChoiceValue","ChoiceCallback","getDefaultOption","getMessageType","getOptions","getOptionType","ConfirmationCallback","HiddenValueCallback","getPredefinedQuestions","setQuestion","question","setAnswer","answer","endsWith","KbaCreateCallback","getData","MetadataCallback","setName","NameCallback","setPassword","password","PasswordCallback","getWaitTime","PollingWaitCallback","getSiteKey","setResult","ReCaptchaCallback","getTerms","getVersion","getCreateDate","Date","setAccepted","TermsAndConditionsCallback","TextOutputCallback","ValidatedCreatePasswordCallback","ValidatedCreateUsernameCallback","getCurrentUser","UserManager","FRAuth","FRUser","HttpClient","LocalStorage","nodeType","freeGlobal","global","self","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","floor","Math","stringFromCharCode","RangeError","fn","mapDomain","string","parts","ucs2decode","extra","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","out","basic","oldi","w","baseMinusT","codePoint","inputLength","bias","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","webpackPolyfill","deprecate","paths","children","g","Function","e","arg","prop","qs","sep","eq","regexp","maxKeys","len","kstr","vstr","idx","xs","stringifyPrimitive","isFinite","objectKeys","ks","f","names","nextPayload","authId","callback","BooleanAttributeInputCallback","StringAttributeInputCallback","login","handler","info","loginWithUI","ui","getSession","logout","ok","repeat","now","pow","_request","newTokenRequired","requiresNewToken","bypassAuthentication","persist","storage","localStorage","sessionStorage","getItem","setItem","removeItem"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"forgerock\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"forgerock\"] = factory();\n\telse\n\t\troot[\"forgerock\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 31);\n","import { Callback, NameValue } from '../../auth/interfaces';\n\n/**\n * Base class for authentication tree callback wrappers.\n */\nclass FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {}\n\n  /**\n   * Gets the name of this callback type.\n   */\n  public getType(): string {\n    return this.payload.type;\n  }\n\n  /**\n   * Gets the value of the specified input element, or the first element if `selector` is not\n   * provided.\n   *\n   * @param selector The index position or name of the desired element\n   */\n  public getInputValue(selector: number | string = 0) {\n    return this.getArrayElement(this.payload.input, selector).value;\n  }\n\n  /**\n   * Sets the value of the specified input element, or the first element if `selector` is not\n   * provided.\n   *\n   * @param selector The index position or name of the desired element\n   */\n  public setInputValue(value: any, selector: number | string = 0) {\n    this.getArrayElement(this.payload.input, selector).value = value;\n  }\n\n  /**\n   * Gets the value of the specified output element, or the first element if `selector` is not\n   * provided.\n   *\n   * @param selector The index position or name of the desired element\n   */\n  public getOutputValue(selector: number | string = 0) {\n    return this.getArrayElement(this.payload.output, selector).value;\n  }\n\n  /**\n   * Gets the first output element with the specified name.\n   *\n   * @deprecated Use `getOutputValue(name)` instead\n   * @param name The name of the desired element\n   */\n  public getOutputByName(name: string): NameValue {\n    const entry = this.payload.output.find((x) => x.name === name);\n    if (!entry) {\n      throw new Error(`Missing callback output entry \"${name}\"`);\n    }\n    return entry;\n  }\n\n  private getArrayElement(array: NameValue[], selector: number | string = 0) {\n    if (typeof selector === 'number') {\n      if (selector < 0 || selector > array.length - 1) {\n        throw new Error(`Selector index ${selector} is out of range`);\n      }\n      return array[selector];\n    }\n\n    if (typeof selector === 'string') {\n      const input = array.find((x) => x.name === selector);\n      if (!input) {\n        throw new Error(`Missing callback input entry \"${selector}\"`);\n      }\n      return input;\n    }\n\n    throw new Error('Invalid selector value type');\n  }\n}\n\nexport default FRCallback;\n","import { DEFAULT_TIMEOUT } from './constants';\nimport { ConfigOptions, ServerConfig, ValidConfigOptions } from './interfaces';\n\n/**\n * Utility for merging configuration defaults with one-off options.\n *\n * Example:\n *\n * ```js\n * // Establish configuration defaults\n * Config.set({\n *   clientId: 'myApp',\n *   serverConfig: { baseUrl: 'https://openam-domain.com/am' },\n *   tree: 'UsernamePassword'\n * });\n *\n * // Specify overrides as needed\n * const configOverrides = { tree: 'PasswordlessWebAuthn' };\n * const step = await FRAuth.next(undefined, configOverrides);\n */\nabstract class Config {\n  private static options: ConfigOptions;\n\n  /**\n   * Sets the default options.\n   *\n   * @param options The options to use as defaults\n   */\n  public static set(options: ConfigOptions) {\n    if (!this.isValid(options)) {\n      throw new Error('Configuration is invalid');\n    }\n    if (options.serverConfig) {\n      this.setTimeout(options.serverConfig);\n      this.validateBaseUrl(options.serverConfig);\n    }\n    this.options = { ...options };\n  }\n\n  /**\n   * Merges the provided options with the default options.  Ensures a server configuration exists.\n   *\n   * @param options The options to merge with defaults\n   */\n  public static get(options?: ConfigOptions): ValidConfigOptions {\n    if (!this.options && !options) {\n      throw new Error('Configuration has not been set');\n    }\n\n    const merged = { ...this.options, ...options };\n    if (!merged.serverConfig || !merged.serverConfig.baseUrl) {\n      throw new Error('Server configuration has not been set');\n    }\n\n    return merged as ValidConfigOptions;\n  }\n\n  private static isValid(options: ConfigOptions) {\n    return options && options.serverConfig;\n  }\n\n  private static setTimeout(serverConfig: ServerConfig) {\n    if (serverConfig && !serverConfig.timeout) {\n      serverConfig.timeout = DEFAULT_TIMEOUT;\n    }\n  }\n\n  private static validateBaseUrl(serverConfig: ServerConfig) {\n    const url = serverConfig.baseUrl;\n    if (url.charAt(url.length - 1) !== '/') {\n      serverConfig.baseUrl = url + '/';\n    }\n  }\n}\n\nexport default Config;\nexport { DEFAULT_TIMEOUT, ConfigOptions, ServerConfig, ValidConfigOptions };\n","/**\n * Types of steps returned by the authentication tree.\n */\nenum StepType {\n  LoginFailure = 'LoginFailure',\n  LoginSuccess = 'LoginSuccess',\n  Step = 'Step',\n}\n\nexport { StepType };\n","import { stringify } from 'querystring';\nimport { resolve } from 'url';\nimport Config, { ConfigOptions } from '../config/index';\nimport TokenStorage from '../token-storage';\nimport { isOkOr4xx } from '../util/http';\nimport PKCE from '../util/pkce';\nimport { withTimeout } from '../util/timeout';\nimport { ResponseType } from './enums';\nimport { GetAuthorizationUrlOptions, GetOAuth2TokensOptions, OAuth2Tokens } from './interfaces';\n\n/**\n * OAuth 2.0 client.\n */\nabstract class OAuth2Client {\n  /**\n   * Gets the authorization URL configured in OpenAM, optionally using PKCE.\n   */\n  public static async getAuthorizeUrl(options: GetAuthorizationUrlOptions): Promise<string> {\n    const { serverConfig, clientId, redirectUri, scope } = Config.get(options);\n\n    /* eslint-disable @typescript-eslint/camelcase */\n    const requestParams: any = {\n      client_id: clientId,\n      redirect_uri: redirectUri,\n      response_type: options.responseType,\n      scope,\n      state: options.state,\n    };\n    /* eslint-enable @typescript-eslint/camelcase */\n\n    if (options.verifier) {\n      const challenge = await PKCE.createChallenge(options.verifier);\n      /* eslint-disable @typescript-eslint/camelcase */\n      requestParams.code_challenge = challenge;\n      requestParams.code_challenge_method = 'S256';\n      /* eslint-enable @typescript-eslint/camelcase */\n    }\n\n    const url = this.getUrl('authorize', requestParams, options);\n\n    return new Promise((resolve, reject) => {\n      const iframe = document.createElement('iframe');\n\n      const onLoad = () => {\n        if (iframe.contentWindow) {\n          const newHref = iframe.contentWindow.location.href;\n          if (this.containsAuthCode(newHref)) {\n            cleanUp();\n            resolve(newHref);\n          }\n        }\n      };\n\n      const cleanUp = () => {\n        clearTimeout(timeout);\n        iframe.removeEventListener('load', onLoad);\n        iframe.remove();\n      };\n\n      const timeout = setTimeout(() => {\n        cleanUp();\n        reject('Timeout');\n      }, serverConfig.timeout);\n\n      iframe.style.display = 'none';\n      iframe.addEventListener('load', onLoad);\n      document.body.appendChild(iframe);\n      iframe.src = url;\n    });\n  }\n\n  /**\n   * Exchanges an authorization code for OAuth tokens.\n   */\n  public static async getOAuth2Tokens(options: GetOAuth2TokensOptions): Promise<OAuth2Tokens> {\n    const { clientId, redirectUri } = Config.get(options);\n\n    /* eslint-disable @typescript-eslint/camelcase */\n    const requestParams: any = {\n      client_id: clientId,\n      code: options.authorizationCode,\n      grant_type: 'authorization_code',\n      redirect_uri: redirectUri,\n    };\n    /* eslint-enable @typescript-eslint/camelcase */\n\n    if (options.verifier) {\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      requestParams.code_verifier = options.verifier;\n    }\n\n    const body = stringify(requestParams);\n    const init = {\n      body,\n      headers: {\n        'content-length': body.length.toString(),\n        'content-type': 'application/x-www-form-urlencoded',\n      },\n      method: 'POST',\n    };\n\n    const response = await this.request('access_token', undefined, false, init, options);\n    const responseBody = await this.getBody(response);\n\n    if (response.status !== 200) {\n      const message = this.parseError(responseBody) || `Expected 200, received ${response.status}`;\n      throw new Error(message);\n    }\n\n    if (!responseBody.access_token) {\n      throw new Error('Access token not found in response');\n    }\n\n    return {\n      accessToken: responseBody.access_token,\n      idToken: responseBody.id_token,\n      refreshToken: responseBody.refresh_token,\n    };\n  }\n\n  /**\n   * Gets OIDC user information.\n   */\n  public static async getUserInfo(options?: ConfigOptions) {\n    const response = await this.request('userinfo', undefined, true, undefined, options);\n    if (response.status !== 200) {\n      throw new Error(`Failed to get user info; received ${response.status}`);\n    }\n\n    const json = await response.json();\n    return json;\n  }\n\n  /**\n   * Invokes the OIDC end session endpoint.\n   */\n  public static async endSession(options?: ConfigOptions) {\n    const { idToken } = await TokenStorage.get();\n\n    const query: any = {};\n    if (idToken) {\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      query.id_token_hint = idToken;\n    }\n\n    const response = await this.request('connect/endSession', query, true, undefined, options);\n    if (!isOkOr4xx(response)) {\n      throw new Error(`Failed to end session; received ${response.status}`);\n    }\n  }\n\n  /**\n   * Immediately revokes the stored access token.\n   */\n  public static async revokeToken(options?: ConfigOptions) {\n    const { clientId } = Config.get(options);\n    const { accessToken } = await TokenStorage.get();\n\n    const init: RequestInit = {\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      body: stringify({ client_id: clientId, token: accessToken }),\n      credentials: 'include',\n      headers: { 'content-type': 'application/x-www-form-urlencoded' },\n      method: 'POST',\n    };\n\n    const response = await this.request('token/revoke', undefined, false, init, options);\n    if (!isOkOr4xx(response)) {\n      throw new Error(`Failed to revoke token; received ${response.status}`);\n    }\n  }\n\n  private static async request(\n    path: string,\n    query?: any,\n    includeToken?: boolean,\n    init?: RequestInit,\n    options?: ConfigOptions,\n  ) {\n    const { serverConfig } = Config.get(options);\n    const url = this.getUrl(path, query, options);\n\n    init = init || ({} as RequestInit);\n\n    if (includeToken) {\n      const { accessToken } = await TokenStorage.get();\n      init.credentials = 'include';\n      init.headers = (init.headers || new Headers()) as Headers;\n      init.headers.set('authorization', `Bearer ${accessToken}`);\n    }\n\n    return await withTimeout(fetch(url, init), serverConfig.timeout);\n  }\n\n  private static containsAuthCode(url: string | null) {\n    return url && /code=([^&]+)/.test(url);\n  }\n\n  private static async getBody(response: Response) {\n    const contentType = response.headers.get('content-type');\n    if (contentType && contentType.indexOf('application/json') > -1) {\n      return await response.json();\n    }\n    return await response.text();\n  }\n\n  private static parseError(json: any): string | undefined {\n    if (json) {\n      if (json.error && json.error_description) {\n        return `${json.error}: ${json.error_description}`;\n      }\n      if (json.code && json.message) {\n        return `${json.code}: ${json.message}`;\n      }\n    }\n    return undefined;\n  }\n\n  private static getUrl(path: string, query?: any, options?: ConfigOptions): string {\n    const { serverConfig } = Config.get(options);\n    let url = resolve(serverConfig.baseUrl, `oauth2/${path}`);\n    if (query) {\n      url += `?${stringify(query)}`;\n    }\n    return url;\n  }\n}\n\nexport default OAuth2Client;\nexport { GetAuthorizationUrlOptions, GetOAuth2TokensOptions, OAuth2Tokens, ResponseType };\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","import { DEFAULT_TIMEOUT } from '../config';\n\nfunction withTimeout<T>(promise: Promise<T>, timeout: number = DEFAULT_TIMEOUT) {\n  const effectiveTimeout = timeout || DEFAULT_TIMEOUT;\n  return Promise.race([\n    promise,\n    new Promise<T>((_, reject) => setTimeout(() => reject(new Error('Timeout')), effectiveTimeout)),\n  ]);\n}\n\nexport { withTimeout };\n","import Config from '../config/index';\nimport { Tokens } from '../shared/interfaces';\nimport { DB_NAME, TOKEN_KEY } from './constants';\n\n/**\n * Provides access to the token storage API.\n */\nabstract class TokenStorage {\n  /**\n   * Gets stored tokens.\n   */\n  public static async get(): Promise<Tokens> {\n    const clientId = this.getClientId();\n\n    return new Promise((resolve, reject) => {\n      const onError = (event: Event) => {\n        this.logError('get', event);\n        reject();\n      };\n\n      const openReq = window.indexedDB.open(DB_NAME);\n\n      openReq.onsuccess = () => {\n        if (!openReq.result.objectStoreNames.contains(clientId)) {\n          return resolve(undefined);\n        }\n\n        const getReq = openReq.result\n          .transaction(clientId, 'readonly')\n          .objectStore(clientId)\n          .get(TOKEN_KEY);\n\n        getReq.onsuccess = (event: Event) => {\n          const tokens = this.getResult<Tokens>(event);\n          resolve(tokens);\n        };\n\n        getReq.onerror = onError;\n      };\n\n      openReq.onupgradeneeded = () => {\n        resolve(undefined);\n      };\n\n      openReq.onerror = onError;\n    });\n  }\n\n  /**\n   * Saves tokens.\n   */\n  public static async set(tokens: Tokens): Promise<void> {\n    const clientId = this.getClientId();\n\n    return new Promise((resolve, reject) => {\n      const onSetSuccess = () => {\n        resolve();\n      };\n\n      const onError = (event: Event) => {\n        this.logError('set', event);\n        reject();\n      };\n\n      const onUpgradeNeeded = () => {\n        openReq.result.createObjectStore(clientId);\n      };\n\n      const onOpenSuccess = () => {\n        if (!openReq.result.objectStoreNames.contains(clientId)) {\n          const version = openReq.result.version + 1;\n          openReq.result.close();\n\n          openReq = window.indexedDB.open(DB_NAME, version);\n          openReq.onupgradeneeded = onUpgradeNeeded;\n          openReq.onsuccess = onOpenSuccess;\n          openReq.onerror = onError;\n          return;\n        }\n\n        const txnReq = openReq.result.transaction(clientId, 'readwrite');\n        txnReq.onerror = onError;\n        const objectStore = txnReq.objectStore(clientId);\n\n        const addReq = objectStore.add(tokens, TOKEN_KEY);\n        addReq.onsuccess = onSetSuccess;\n        addReq.onerror = () => {\n          const putReq = objectStore.put(tokens, TOKEN_KEY);\n          putReq.onsuccess = onSetSuccess;\n          putReq.onerror = onError;\n        };\n      };\n\n      let openReq = window.indexedDB.open(DB_NAME);\n      openReq.onupgradeneeded = onUpgradeNeeded;\n      openReq.onsuccess = onOpenSuccess;\n      openReq.onerror = onError;\n    });\n  }\n\n  /**\n   * Removes stored tokens.\n   */\n  public static async remove(): Promise<void> {\n    const clientId = this.getClientId();\n\n    return new Promise((resolve, reject) => {\n      const onError = (event: Event) => {\n        this.logError('remove', event);\n        reject();\n      };\n\n      const openReq = window.indexedDB.open(DB_NAME);\n\n      openReq.onsuccess = () => {\n        if (!openReq.result.objectStoreNames.contains(clientId)) {\n          return resolve();\n        }\n\n        const removeReq = openReq.result\n          .transaction(clientId, 'readwrite')\n          .objectStore(clientId)\n          .delete(TOKEN_KEY);\n\n        removeReq.onsuccess = () => {\n          resolve();\n        };\n\n        removeReq.onerror = onError;\n      };\n\n      openReq.onerror = onError;\n    });\n  }\n\n  private static getClientId() {\n    const { clientId } = Config.get();\n    if (!clientId) {\n      throw new Error('clientId is required to manage token storage');\n    }\n    return clientId;\n  }\n\n  private static getResult<T>(event: Event) {\n    return (event.target as any).result as T;\n  }\n\n  private static logError(key: string, data: any) {\n    const message = data.target && data.target.error ? data.target.error.message : event;\n    console.error(`TokenStorage:${key}`, message);\n  }\n}\n\nexport default TokenStorage;\n","/**\n * PKCE helper class for generating verifier and challenge.\n */\nabstract class PKCE {\n  /**\n   * Creates a random verifier.\n   *\n   * @param size The length of the verifier (default 32 characters)\n   */\n  public static createVerifier(size = 32): string {\n    const array = new Uint8Array(size);\n    window.crypto.getRandomValues(array);\n    const verifier = this.base64UrlEncode(array);\n    return verifier;\n  }\n\n  /**\n   * Creates a SDH-256 hash of the verifier.\n   *\n   * @param verifier The verifier to hash\n   */\n  public static async createChallenge(verifier: string): Promise<string> {\n    const sha256 = await this.sha256(verifier);\n    const challenge = this.base64UrlEncode(sha256);\n    return challenge;\n  }\n\n  /**\n   * Creates a base-64 encoded url-friendly version of the specified array.\n   *\n   * @param array The array of numbers to encode\n   */\n  public static base64UrlEncode(array: Uint8Array): string {\n    const numbers = Array.prototype.slice.call(array);\n    const ascii = window.btoa(String.fromCharCode.apply(null, numbers));\n    const urlEncoded = ascii\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .replace(/=/g, '');\n    return urlEncoded;\n  }\n\n  /**\n   * Creates a SHA-256 hash of the specified string.\n   *\n   * @param s The string to hash\n   */\n  public static async sha256(s: string): Promise<Uint8Array> {\n    const uint8Array = new TextEncoder().encode(s);\n    const hashBuffer = await window.crypto.subtle.digest('SHA-256', uint8Array);\n    const hashArray = new Uint8Array(hashBuffer);\n    return hashArray;\n  }\n}\n\nexport default PKCE;\n","import { parse as parseUrl } from 'url';\nimport { ConfigOptions } from '../config';\nimport OAuth2Client, { OAuth2Tokens, ResponseType } from '../oauth2-client';\nimport { Tokens } from '../shared/interfaces';\nimport TokenStorage from '../token-storage';\nimport nonce from '../util/nonce';\nimport PKCE from '../util/pkce';\n\ninterface GetTokensOptions extends ConfigOptions {\n  forceRenew?: boolean;\n}\n\nabstract class TokenManager {\n  public static async getTokens(options?: GetTokensOptions): Promise<OAuth2Tokens> {\n    let tokens: Tokens;\n\n    // Try to use stored tokens, if possible\n    if (!options || !options.forceRenew) {\n      try {\n        tokens = await TokenStorage.get();\n        if (tokens) {\n          return tokens;\n        }\n      } catch (error) {\n        console.error('Failed to retrieve stored tokens', error);\n      }\n    }\n\n    const verifier = PKCE.createVerifier();\n    const state = nonce()().toString();\n    const authorizeUrlOptions = { ...options, responseType: ResponseType.Code, state, verifier };\n    const authorizeUrl = await OAuth2Client.getAuthorizeUrl(authorizeUrlOptions);\n\n    const parsedAuthorizeUrl = parseUrl(authorizeUrl, true);\n    if (parsedAuthorizeUrl.query.state !== state) {\n      throw new Error('State mismatch');\n    }\n    if (!parsedAuthorizeUrl.query.code || Array.isArray(parsedAuthorizeUrl.query.code)) {\n      throw new Error('Failed to acquire authorization code');\n    }\n\n    const authorizationCode = parsedAuthorizeUrl.query.code;\n    const getTokensOptions = { ...options, authorizationCode, verifier };\n    tokens = await OAuth2Client.getOAuth2Tokens(getTokensOptions);\n\n    try {\n      await TokenStorage.set(tokens);\n    } catch (error) {\n      console.error('Failed to store tokens', error);\n    }\n\n    return tokens;\n  }\n\n  public static async deleteTokens() {\n    await TokenStorage.remove();\n  }\n}\n\nexport default TokenManager;\nexport { GetTokensOptions };\n","import { resolve } from 'url';\nimport Config, { ConfigOptions, ServerConfig } from '../config';\nimport { getRealmUrlPath } from '../util/realm';\nimport { withTimeout } from '../util/timeout';\nimport { Step } from './interfaces';\n\n/**\n * Provides direct access to the OpenAM authentication tree API.\n */\nabstract class Auth {\n  /**\n   * Gets the next step in the authentication tree.\n   *\n   * @param {Step} previousStep The previous step, including any required input.\n   * @param {ConfigOptions} options Configuration default overrides.\n   * @return {Step} The next step in the authentication tree.\n   */\n  public static async next(previousStep?: Step, options?: ConfigOptions): Promise<Step> {\n    const { realmPath, serverConfig, tree } = Config.get(options);\n    const url = this.constructUrl(serverConfig, realmPath, tree);\n    const init = this.configureRequest(previousStep);\n    const res = await withTimeout(fetch(url, init), serverConfig.timeout);\n    const json = await this.getResponseJson(res);\n    return json;\n  }\n\n  private static constructUrl(serverConfig: ServerConfig, realmPath?: string, tree?: string) {\n    const realmUrlPath = getRealmUrlPath(realmPath);\n    const query = tree ? `?authIndexType=service&authIndexValue=${tree}` : '';\n    const path = `json/${realmUrlPath}/authenticate${query}`;\n    const url = resolve(serverConfig.baseUrl, path);\n    return url;\n  }\n\n  private static configureRequest(step?: Step) {\n    const init: RequestInit = {\n      body: step ? JSON.stringify(step) : undefined,\n      credentials: 'include',\n      headers: {\n        accept: 'application/json',\n        'accept-api-version': 'protocol=1.0,resource=2.1',\n        'content-type': 'application/json',\n      },\n      method: 'POST',\n    };\n    return init;\n  }\n\n  private static async getResponseJson(res: Response) {\n    const contentType = res.headers.get('content-type');\n    const isJson = contentType && contentType.indexOf('application/json') > -1;\n    const json = isJson ? await res.json() : undefined;\n    return json;\n  }\n}\n\nexport default Auth;\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","/**\n * Known errors that can occur during authentication.\n */\nenum ErrorCode {\n  BadRequest = 'BAD_REQUEST',\n  Timeout = 'TIMEOUT',\n  Unauthorized = 'UNAUTHORIZED',\n  Unknown = 'UNKNOWN',\n}\n\n/**\n * Types of callbacks directly supported by the SDK.\n */\nenum CallbackType {\n  BooleanAttributeInputCallback = 'BooleanAttributeInputCallback',\n  ChoiceCallback = 'ChoiceCallback',\n  ConfirmationCallback = 'ConfirmationCallback',\n  HiddenValueCallback = 'HiddenValueCallback',\n  KbaCreateCallback = 'KbaCreateCallback',\n  MetadataCallback = 'MetadataCallback',\n  NameCallback = 'NameCallback',\n  PasswordCallback = 'PasswordCallback',\n  PollingWaitCallback = 'PollingWaitCallback',\n  ReCaptchaCallback = 'ReCaptchaCallback',\n  StringAttributeInputCallback = 'StringAttributeInputCallback',\n  TermsAndConditionsCallback = 'TermsAndConditionsCallback',\n  TextOutputCallback = 'TextOutputCallback',\n  ValidatedCreatePasswordCallback = 'ValidatedCreatePasswordCallback',\n  ValidatedCreateUsernameCallback = 'ValidatedCreateUsernameCallback',\n}\n\nexport { CallbackType, ErrorCode };\n","import { CallbackContainer, FREvent, Listener } from './interfaces';\n\n/**\n * Event dispatcher for subscribing and publishing categorized events.\n */\nclass Dispatcher {\n  private callbacks: CallbackContainer = {};\n\n  /**\n   * Subscribes to an event type.\n   *\n   * @param type The event type\n   * @param listener The function to subscribe to events of this type\n   */\n  public addEventListener(type: string, listener: Listener) {\n    add(this.callbacks, type, listener);\n  }\n\n  /**\n   * Unsubscribes from an event type.\n   *\n   * @param type The event type\n   * @param listener The function to unsubscribe from events of this type\n   */\n  public removeEventListener(type: string, listener: Listener) {\n    remove(this.callbacks, type, listener);\n  }\n\n  /**\n   * Unsubscribes all listener functions to a single event type or all event types.\n   *\n   * @param type The event type, or all event types if not specified\n   */\n  public clearEventListeners(type?: string) {\n    clear(this.callbacks, type);\n  }\n\n  /**\n   * Publishes an event.\n   *\n   * @param event The event object to publish\n   */\n  public dispatchEvent<T extends FREvent>(event: T) {\n    if (!this.callbacks[event.type]) {\n      return;\n    }\n    for (const listener of this.callbacks[event.type]) {\n      listener(event);\n    }\n  }\n}\n\n/** @hidden */\nfunction add(container: CallbackContainer, type: string, listener: Listener) {\n  container[type] = container[type] || [];\n  if (container[type].indexOf(listener) < 0) {\n    container[type].push(listener);\n  }\n}\n\n/** @hidden */\nfunction remove(container: CallbackContainer, type: string, listener: Listener) {\n  if (!container[type]) {\n    return;\n  }\n  const index = container[type].indexOf(listener);\n  if (index >= 0) {\n    container[type].splice(index, 1);\n  }\n}\n\n/** @hidden */\nfunction clear(container: CallbackContainer, type?: string) {\n  Object.keys(container).forEach((k: string) => {\n    if (!type || k === type) {\n      delete container[k];\n    }\n  });\n}\n\nexport default Dispatcher;\nexport { CallbackContainer, FREvent, Listener };\n","import { Step } from '../auth/interfaces';\nimport { StepType } from './enums';\nimport { AuthResponse, FailureDetail } from './interfaces';\n\nclass FRLoginFailure implements AuthResponse {\n  /**\n   * The type of step.\n   */\n  public readonly type = StepType.LoginFailure;\n\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Step) {}\n\n  /**\n   * Gets the error code.\n   */\n  public getCode(): number {\n    return Number(this.payload.code);\n  }\n\n  /**\n   * Gets the failure details.\n   */\n  public getDetail(): FailureDetail | undefined {\n    return this.payload.detail;\n  }\n\n  /**\n   * Gets the failure message.\n   */\n  public getMessage(): string | undefined {\n    return this.payload.message;\n  }\n\n  /**\n   * Gets the failure reason.\n   */\n  public getReason(): string | undefined {\n    return this.payload.reason;\n  }\n}\n\nexport default FRLoginFailure;\n","import { Step } from '../auth/interfaces';\nimport { StepType } from './enums';\nimport { AuthResponse } from './interfaces';\n\nclass FRLoginSuccess implements AuthResponse {\n  /**\n   * The type of step.\n   */\n  public readonly type = StepType.LoginSuccess;\n\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Step) {}\n\n  /**\n   * Gets the step's realm.\n   */\n  public getRealm() {\n    return this.payload.realm;\n  }\n\n  /**\n   * Gets the step's session token.\n   */\n  public getSessionToken() {\n    return this.payload.tokenId;\n  }\n\n  /**\n   * Gets the step's success URL.\n   */\n  public getSuccessUrl() {\n    return this.payload.successUrl;\n  }\n}\n\nexport default FRLoginSuccess;\n","import { CallbackType } from '../auth/enums';\nimport { Callback, Step } from '../auth/interfaces';\nimport FRCallback from './callbacks';\nimport createCallback, { FRCallbackFactory } from './callbacks/factory';\nimport { StepType } from './enums';\nimport { AuthResponse } from './interfaces';\n\n/**\n * Represents a single step of an authentication tree.\n */\nclass FRStep implements AuthResponse {\n  /**\n   * The type of step.\n   */\n  public readonly type = StepType.Step;\n\n  /**\n   * The callbacks contained in this step.\n   */\n  public callbacks: FRCallback[] = [];\n\n  /**\n   * @param payload The raw payload returned by OpenAM\n   * @param callbackFactory A function that returns am implementation of FRCallback\n   */\n  constructor(public payload: Step, callbackFactory?: FRCallbackFactory) {\n    if (payload.callbacks) {\n      this.callbacks = this.convertCallbacks(payload.callbacks, callbackFactory);\n    }\n  }\n\n  /**\n   * Gets the first callback of the specified type in this step.\n   *\n   * @param type The type of callback to find.\n   */\n  public getCallbackOfType<T extends FRCallback>(type: CallbackType): T {\n    const callbacks = this.getCallbacksOfType<T>(type);\n    if (callbacks.length !== 1) {\n      throw new Error(`Expected 1 callback of type \"${type}\", but found ${callbacks.length}`);\n    }\n    return callbacks[0];\n  }\n\n  /**\n   * Gets all callbacks of the specified type in this step.\n   *\n   * @param type The type of callback to find.\n   */\n  public getCallbacksOfType<T extends FRCallback>(type: CallbackType): T[] {\n    return this.callbacks.filter((x) => x.getType() === type) as T[];\n  }\n\n  /**\n   * Sets the value of the first callback of the specified type in this step.\n   *\n   * @param type The type of callback to find.\n   * @param value The value to set for the callback.\n   */\n  public setCallbackValue(type: CallbackType, value: any) {\n    const callbacks = this.getCallbacksOfType(type);\n    if (callbacks.length !== 1) {\n      throw new Error(`Expected 1 callback of type \"${type}\", but found ${callbacks.length}`);\n    }\n    callbacks[0].setInputValue(value);\n  }\n\n  /**\n   * Gets the step's description.\n   */\n  public getDescription() {\n    return this.payload.description;\n  }\n\n  /**\n   * Gets the step's header.\n   */\n  public getHeader() {\n    return this.payload.header;\n  }\n\n  /**\n   * Gets the step's stage.\n   */\n  public getStage() {\n    return this.payload.stage;\n  }\n\n  private convertCallbacks(callbacks: Callback[], callbackFactory?: FRCallbackFactory) {\n    const converted = callbacks.map((x: Callback) => {\n      // This gives preference to the provided factory and falls back to our default implementation\n      return (callbackFactory || createCallback)(x) || createCallback(x);\n    });\n    return converted;\n  }\n}\n\n/**\n * A function that can populate the provided authentication tree step.\n */\ntype FRStepHandler = (step: FRStep) => void;\n\nexport default FRStep;\nexport { FRStepHandler };\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to collect attributes.\n *\n * @typeparam T Maps to StringAttributeInputCallback and BooleanAttributeInputCallback, respectively\n */\nclass AttributeInputCallback<T extends string | boolean> extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the attribute name.\n   */\n  public getName(): string {\n    return this.getOutputValue('name');\n  }\n\n  /**\n   * Gets the attribute prompt.\n   */\n  public getPrompt(): string {\n    return this.getOutputValue('prompt');\n  }\n\n  /**\n   * Gets whether the attribute is required.\n   */\n  public isRequired(): boolean {\n    return this.getOutputValue('required');\n  }\n\n  /**\n   * Gets the attribute policy keys.\n   */\n  public getPolicyKeys(): string[] {\n    return this.getOutputValue('policies');\n  }\n\n  /**\n   * Gets the attribute policy keys that are not satisfied.\n   */\n  public getFailedPolicyKeys(): string[] {\n    return this.getOutputValue('failedPolicies');\n  }\n\n  /**\n   * Sets the attribute's value.\n   */\n  public setValue(value: T) {\n    this.setInputValue(value);\n  }\n}\n\nexport default AttributeInputCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to collect an answer to a choice.\n */\nclass ChoiceCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the choice's prompt.\n   */\n  public getPrompt(): string {\n    return this.getOutputValue('prompt');\n  }\n\n  /**\n   * Gets the choice's default answer.\n   */\n  public getDefaultChoice(): number {\n    return this.getOutputValue('defaultChoice');\n  }\n\n  /**\n   * Gets the choice's possible answers.\n   */\n  public getChoices(): string[] {\n    return this.getOutputValue('choices');\n  }\n\n  /**\n   * Sets the choice's answer by index position.\n   */\n  public setChoiceIndex(index: number) {\n    const length = this.getChoices().length;\n    if (index < 0 || index > length - 1) {\n      throw new Error(`${index} is out of bounds`);\n    }\n    this.setInputValue(index);\n  }\n\n  /**\n   * Sets the choice's answer by value.\n   */\n  public setChoiceValue(value: string) {\n    const index = this.getChoices().indexOf(value);\n    if (index === -1) {\n      throw new Error(`\"${value}\" is not a valid choice`);\n    }\n    this.setInputValue(index);\n  }\n}\n\nexport default ChoiceCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to collect a comfirmation to a message.\n */\nclass ConfirmationCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the index position of the confirmation's default answer.\n   */\n  public getDefaultOption(): number {\n    return Number(this.getOutputValue('defaultOption'));\n  }\n\n  /**\n   * Gets the confirmation's message type.\n   */\n  public getMessageType(): number {\n    return Number(this.getOutputValue('messageType'));\n  }\n\n  /**\n   * Gets the confirmation's possible answers.\n   */\n  public getOptions(): string[] {\n    return this.getOutputValue('options');\n  }\n\n  /**\n   * Gets the confirmation's option type.\n   */\n  public getOptionType(): number {\n    return Number(this.getOutputValue('optionType'));\n  }\n\n  /**\n   * Gets the confirmation's prompt.\n   */\n  public getPrompt(): string {\n    return this.getOutputValue('prompt');\n  }\n}\n\nexport default ConfirmationCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to collect information indirectly from the user.\n */\nclass HiddenValueCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n}\n\nexport default HiddenValueCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to collect KBA-style security questions and answers.\n */\nclass KbaCreateCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the callback prompt.\n   */\n  public getPrompt(): string {\n    return this.getOutputValue('prompt');\n  }\n\n  /**\n   * Gets the callback's list of pre-defined security questions.\n   */\n  public getPredefinedQuestions(): string[] {\n    return this.getOutputValue('predefinedQuestions');\n  }\n\n  /**\n   * Sets the callback's security question.\n   */\n  public setQuestion(question: string) {\n    this.setValue('question', question);\n  }\n\n  /**\n   * Sets the callback's security question answer.\n   */\n  public setAnswer(answer: string) {\n    this.setValue('answer', answer);\n  }\n\n  private setValue(type: 'question' | 'answer', value: string) {\n    const input = this.payload.input.find((x) => x.name.endsWith(type));\n    if (!input) {\n      throw new Error(`No input has name ending in \"${type}\"`);\n    }\n    input.value = value;\n  }\n}\n\nexport default KbaCreateCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to deliver and collect miscellaneous data.\n */\nclass MetadataCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the callback's data.\n   */\n  public getData<T>(): T {\n    return this.getOutputValue('data');\n  }\n}\n\nexport default MetadataCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to collect a username.\n */\nclass NameCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the callback's prompt.\n   */\n  public getPrompt(): string {\n    return this.getOutputValue('prompt');\n  }\n\n  /**\n   * Sets the username.\n   */\n  public setName(name: string) {\n    this.setInputValue(name);\n  }\n}\n\nexport default NameCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to collect a password.\n */\nclass PasswordCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the callback's prompt.\n   */\n  public getPrompt(): string {\n    return this.getOutputValue('prompt');\n  }\n\n  /**\n   * Sets the password.\n   */\n  public setPassword(password: string) {\n    this.setInputValue(password);\n  }\n}\n\nexport default PasswordCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to instruct the system to poll while a backend process completes.\n */\nclass PollingWaitCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the message to display while polling.\n   */\n  public getMessage(): string {\n    return this.getOutputValue('message');\n  }\n\n  /**\n   * Gets the polling interval in seconds.\n   */\n  public getWaitTime(): number {\n    return Number(this.getOutputValue('waitTime'));\n  }\n}\n\nexport default PollingWaitCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to integrate reCAPTCHA.\n */\nclass ReCaptchaCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the reCAPTCHA site key.\n   */\n  public getSiteKey(): string {\n    return this.getOutputValue('recaptchaSiteKey');\n  }\n\n  /**\n   * Sets the reCAPTCHA result.\n   */\n  public setResult(result: string) {\n    this.setInputValue(result);\n  }\n}\n\nexport default ReCaptchaCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to collect acceptance of terms and conditions.\n */\nclass TermsAndConditionsCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the terms and conditions content.\n   */\n  public getTerms(): string {\n    return this.getOutputValue('terms');\n  }\n\n  /**\n   * Gets the version of the terms and conditions.\n   */\n  public getVersion(): string {\n    return this.getOutputValue('version');\n  }\n\n  /**\n   * Gets the date of the terms and conditions.\n   */\n  public getCreateDate(): Date {\n    return new Date(this.getOutputValue('createDate'));\n  }\n\n  /**\n   * Sets the callback's acceptance to `true`.\n   */\n  public setAccepted() {\n    this.setInputValue(true);\n  }\n}\n\nexport default TermsAndConditionsCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to display a message.\n */\nclass TextOutputCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the message content.\n   */\n  public getMessage(): string {\n    return this.getOutputValue('message');\n  }\n\n  /**\n   * Gets the message type.\n   */\n  public getMessageType(): string {\n    return this.getOutputValue('messageType');\n  }\n}\n\nexport default TextOutputCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to collect a valid platform password.\n */\nclass ValidatedCreatePasswordCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the callback's prompt.\n   */\n  public getPrompt(): string {\n    return this.getOutputValue('prompt');\n  }\n\n  /**\n   * Gets whether the password is required.\n   */\n  public isRequired(): boolean {\n    return this.getOutputValue('required');\n  }\n\n  /**\n   * Gets the password policy keys.\n   */\n  public getPolicyKeys(): string[] {\n    return this.getOutputValue('policies');\n  }\n\n  /**\n   * Gets the password policy keys that are not satisfied.\n   */\n  public getFailedPolicyKeys(): string[] {\n    return this.getOutputValue('failedPolicies');\n  }\n\n  /**\n   * Sets the callback's password.\n   */\n  public setPassword(password: string) {\n    this.setInputValue(password);\n  }\n}\n\nexport default ValidatedCreatePasswordCallback;\n","import FRCallback from '.';\nimport { Callback } from '../../auth/interfaces';\n\n/**\n * Represents a callback used to collect a valid platform username.\n */\nclass ValidatedCreateUsernameCallback extends FRCallback {\n  /**\n   * @param payload The raw payload returned by OpenAM\n   */\n  constructor(public payload: Callback) {\n    super(payload);\n  }\n\n  /**\n   * Gets the callback's prompt.\n   */\n  public getPrompt(): string {\n    return this.getOutputValue('prompt');\n  }\n\n  /**\n   * Gets whether the username is required.\n   */\n  public isRequired(): boolean {\n    return this.getOutputValue('required');\n  }\n\n  /**\n   * Gets the username policy keys.\n   */\n  public getPolicyKeys(): string[] {\n    return this.getOutputValue('policies');\n  }\n\n  /**\n   * Gets the username policy keys that are not satisfied.\n   */\n  public getFailedPolicyKeys(): string[] {\n    return this.getOutputValue('failedPolicies');\n  }\n\n  /**\n   * Sets the callback's username.\n   */\n  public setName(name: string) {\n    this.setInputValue(name);\n  }\n}\n\nexport default ValidatedCreateUsernameCallback;\n","import OAuth2Client from '../oauth2-client';\n\n/**\n * Provides access to the current user's profile.\n */\nabstract class UserManager {\n  /**\n   * Gets the current user's profile.\n   */\n  public static getCurrentUser() {\n    return OAuth2Client.getUserInfo();\n  }\n}\n\nexport default UserManager;\n","import Auth from './auth';\nimport { CallbackType, ErrorCode } from './auth/enums';\nimport { Callback, NameValue, Step, StepDetail } from './auth/interfaces';\nimport Config, { ConfigOptions, ValidConfigOptions } from './config';\nimport Dispatcher, { CallbackContainer, FREvent, Listener } from './event';\nimport FRAuth from './fr-auth';\nimport AttributeInputCallback from './fr-auth/callbacks/attribute-input-callback';\nimport ChoiceCallback from './fr-auth/callbacks/choice-callback';\nimport ConfirmationCallback from './fr-auth/callbacks/confirmation-callback';\nimport { FRCallbackFactory } from './fr-auth/callbacks/factory';\nimport HiddenValueCallback from './fr-auth/callbacks/hidden-value-callback';\nimport KbaCreateCallback from './fr-auth/callbacks/kba-create-callback';\nimport MetadataCallback from './fr-auth/callbacks/metadata-callback';\nimport NameCallback from './fr-auth/callbacks/name-callback';\nimport PasswordCallback from './fr-auth/callbacks/password-callback';\nimport PollingWaitCallback from './fr-auth/callbacks/polling-wait-callback';\nimport ReCaptchaCallback from './fr-auth/callbacks/recaptcha-callback';\nimport TermsAndConditionsCallback from './fr-auth/callbacks/terms-and-conditions-callback';\nimport TextOutputCallback from './fr-auth/callbacks/text-output-callback';\n// eslint-disable-next-line max-len\nimport ValidatedCreatePasswordCallback from './fr-auth/callbacks/validated-create-password-callback';\n// eslint-disable-next-line max-len\nimport ValidatedCreateUsernameCallback from './fr-auth/callbacks/validated-create-username-callback';\nimport { StepType } from './fr-auth/enums';\nimport FRLoginFailure from './fr-auth/fr-login-failure';\nimport FRLoginSuccess from './fr-auth/fr-login-success';\nimport FRStep, { FRStepHandler } from './fr-auth/fr-step';\nimport { AuthResponse, FailureDetail } from './fr-auth/interfaces';\nimport FRUI from './fr-ui';\nimport FRUser from './fr-user';\nimport HttpClient from './http-client';\nimport OAuth2Client, {\n  GetAuthorizationUrlOptions,\n  GetOAuth2TokensOptions,\n  OAuth2Tokens,\n  ResponseType,\n} from './oauth2-client';\nimport { Tokens } from './shared/interfaces';\nimport TokenManager, { GetTokensOptions } from './token-manager';\nimport TokenStorage from './token-storage';\nimport UserManager from './user-manager';\nimport PKCE from './util/pkce';\nimport LocalStorage from './util/storage';\n\nexport {\n  AttributeInputCallback,\n  Auth,\n  AuthResponse,\n  Callback,\n  CallbackContainer,\n  CallbackType,\n  ChoiceCallback,\n  Config,\n  ConfigOptions,\n  ConfirmationCallback,\n  Dispatcher,\n  ErrorCode,\n  FailureDetail,\n  FRAuth,\n  FRCallbackFactory,\n  FREvent,\n  FRLoginFailure,\n  FRLoginSuccess,\n  FRStep,\n  FRStepHandler,\n  FRUI,\n  FRUser,\n  GetAuthorizationUrlOptions,\n  GetOAuth2TokensOptions,\n  GetTokensOptions,\n  HiddenValueCallback,\n  HttpClient,\n  KbaCreateCallback,\n  Listener,\n  LocalStorage,\n  MetadataCallback,\n  NameCallback,\n  NameValue,\n  OAuth2Client,\n  OAuth2Tokens,\n  PasswordCallback,\n  PKCE,\n  PollingWaitCallback,\n  ReCaptchaCallback,\n  ResponseType,\n  Step,\n  StepDetail,\n  StepType,\n  TermsAndConditionsCallback,\n  TextOutputCallback,\n  TokenManager,\n  Tokens,\n  TokenStorage,\n  UserManager,\n  ValidatedCreatePasswordCallback,\n  ValidatedCreateUsernameCallback,\n  ValidConfigOptions,\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","/** @hidden */\nconst DEFAULT_TIMEOUT = 5000;\n\nexport { DEFAULT_TIMEOUT };\n","function getRealmUrlPath(realmPath?: string) {\n  // Split the path and scrub segments\n  const names = (realmPath || '')\n    .split('/')\n    .map((x) => x.trim())\n    .filter((x) => x !== '');\n\n  // Ensure 'root' is the first realm\n  if (names[0] !== 'root') {\n    names.unshift('root');\n  }\n\n  // Concatenate into a URL path\n  const urlPath = names.map((x) => `realms/${x}`).join('/');\n  return urlPath;\n}\n\nexport { getRealmUrlPath };\n","import { ConfigOptions } from 'config';\nimport Auth from '../auth/index';\nimport FRLoginFailure from './fr-login-failure';\nimport FRLoginSuccess from './fr-login-success';\nimport FRStep from './fr-step';\n\n/**\n * Provides access to the OpenAM authentication tree API.\n *\n * Call `FRAuth.next()` recursively.  At each step, check for session token or error, otherwise\n * populate the step's callbacks and call `next()` again.\n *\n * Example:\n *\n * ```js\n * async function nextStep(previousStep) {\n *   const thisStep = await FRAuth.next(previousStep);\n *\n *   switch (thisStep.type) {\n *     case StepType.LoginSuccess:\n *       const token = thisStep.getSessionToken();\n *       break;\n *     case StepType.LoginFailure:\n *       const detail = thisStep.getDetail();\n *       break;\n *     case StepType.Step:\n *       // Populate `thisStep` callbacks here, and then continue\n *       thisStep.setInputValue('foo');\n *       nextStep(thisStep);\n *       break;\n *   }\n * }\n * ```\n */\nabstract class FRAuth {\n  /**\n   * Requests the next step in the authentication tree.\n   *\n   * @param previousStep The previous step with its callback values populated\n   * @param options Configuration overrides\n   * @return The next step in the authentication tree\n   */\n  public static async next(\n    previousStep?: FRStep,\n    options?: ConfigOptions,\n  ): Promise<FRStep | FRLoginSuccess | FRLoginFailure> {\n    const nextPayload = await Auth.next(previousStep ? previousStep.payload : undefined, options);\n\n    if (nextPayload.tokenId) {\n      return new FRLoginSuccess(nextPayload);\n    }\n\n    if (nextPayload.authId) {\n      const callbackFactory = options ? options.callbackFactory : undefined;\n      return new FRStep(nextPayload, callbackFactory);\n    }\n\n    return new FRLoginFailure(nextPayload);\n  }\n}\n\nexport default FRAuth;\n","import FRCallback from '.';\nimport { CallbackType } from '../../auth/enums';\nimport { Callback } from '../../auth/interfaces';\nimport AttributeInputCallback from './attribute-input-callback';\nimport ChoiceCallback from './choice-callback';\nimport ConfirmationCallback from './confirmation-callback';\nimport HiddenValueCallback from './hidden-value-callback';\nimport KbaCreateCallback from './kba-create-callback';\nimport MetadataCallback from './metadata-callback';\nimport NameCallback from './name-callback';\nimport PasswordCallback from './password-callback';\nimport PollingWaitCallback from './polling-wait-callback';\nimport ReCaptchaCallback from './recaptcha-callback';\nimport TermsAndConditionsCallback from './terms-and-conditions-callback';\nimport TextOutputCallback from './text-output-callback';\nimport ValidatedCreatePasswordCallback from './validated-create-password-callback';\nimport ValidatedCreateUsernameCallback from './validated-create-username-callback';\n\ntype FRCallbackFactory = (callback: Callback) => FRCallback;\n\n/**\n * @hidden\n */\nfunction createCallback(callback: Callback) {\n  switch (callback.type) {\n    case CallbackType.BooleanAttributeInputCallback:\n      return new AttributeInputCallback<boolean>(callback);\n    case CallbackType.ChoiceCallback:\n      return new ChoiceCallback(callback);\n    case CallbackType.ConfirmationCallback:\n      return new ConfirmationCallback(callback);\n    case CallbackType.HiddenValueCallback:\n      return new HiddenValueCallback(callback);\n    case CallbackType.KbaCreateCallback:\n      return new KbaCreateCallback(callback);\n    case CallbackType.MetadataCallback:\n      return new MetadataCallback(callback);\n    case CallbackType.NameCallback:\n      return new NameCallback(callback);\n    case CallbackType.PasswordCallback:\n      return new PasswordCallback(callback);\n    case CallbackType.PollingWaitCallback:\n      return new PollingWaitCallback(callback);\n    case CallbackType.ReCaptchaCallback:\n      return new ReCaptchaCallback(callback);\n    case CallbackType.StringAttributeInputCallback:\n      return new AttributeInputCallback<string>(callback);\n    case CallbackType.TermsAndConditionsCallback:\n      return new TermsAndConditionsCallback(callback);\n    case CallbackType.TextOutputCallback:\n      return new TextOutputCallback(callback);\n    case CallbackType.ValidatedCreatePasswordCallback:\n      return new ValidatedCreatePasswordCallback(callback);\n    case CallbackType.ValidatedCreateUsernameCallback:\n      return new ValidatedCreateUsernameCallback(callback);\n    default:\n      return new FRCallback(callback);\n  }\n}\n\nexport default createCallback;\nexport { FRCallbackFactory };\n","import { ConfigOptions } from '../config';\nimport FRStep, { FRStepHandler } from '../fr-auth/fr-step';\nimport FRUI from '../fr-ui';\nimport OAuth2Client from '../oauth2-client';\nimport TokenManager from '../token-manager';\nimport UserManager from '../user-manager';\n\n/**\n * High-level API for logging a user in/out and getting profile information.\n */\nabstract class FRUser {\n  /**\n   * Logs the user in with the specified step handler, acquires OAuth tokens, and retrieves\n   * user profile.  **Currently not implemented.**\n   *\n   * @typeparam T The type of user object expected\n   * @param handler The function to invoke when handling authentication steps\n   * @param options Configuration overrides\n   */\n  public static async login<T>(\n    handler: FRStepHandler,\n    options?: ConfigOptions,\n  ): Promise<FRStep | T> {\n    console.info(handler, options); // Avoid lint errors\n    throw new Error('FRUser.login() not implemented');\n  }\n\n  /**\n   * Logs the user in with the specified UI, acquires OAuth tokens, and retrieves user profile.\n   *\n   * @typeparam T The type of user object expected\n   * @param ui The UI instance to use to acquire a session\n   * @param options Configuration overrides\n   */\n  public static async loginWithUI<T>(ui: FRUI, options?: ConfigOptions): Promise<T> {\n    try {\n      await ui.getSession(options);\n      await TokenManager.getTokens({ forceRenew: true });\n      const currentUser = await UserManager.getCurrentUser();\n      return currentUser as T;\n    } catch (error) {\n      throw new Error('Login failed');\n    }\n  }\n\n  /**\n   * Ends the user's session and revokes OAuth tokens.\n   *\n   * @param options Configuration overrides\n   */\n  public static async logout(options?: ConfigOptions) {\n    try {\n      // TODO: Determine if we're using logout() or endSession(). logout() removes\n      //       the cookie, but fails with CORS issues currently.\n      // await SessionManager.logout();\n      await OAuth2Client.endSession(options);\n      await OAuth2Client.revokeToken(options);\n      await TokenManager.deleteTokens();\n    } catch (error) {\n      throw new Error('Logout failed');\n    }\n  }\n}\n\nexport default FRUser;\n","/** @hidden */\nconst DB_NAME = 'forgerock-sdk';\n\n/** @hidden */\nconst TOKEN_KEY = 'tokens';\n\nexport { DB_NAME, TOKEN_KEY };\n","function isOkOr4xx(response: Response) {\n  return response.ok || Math.floor(response.status / 100) === 4;\n}\n\nexport { isOkOr4xx };\n","/**\n * Specifies the type of OAuth flow to invoke.\n */\nenum ResponseType {\n  Code = 'code',\n  Token = 'token',\n}\n\nexport { ResponseType };\n","function nonce(length = 15): () => number {\n  let last = -1;\n  let repeat = 0;\n\n  if (length < 4 || length > 15) {\n    throw new Error('Invalid nonce length');\n  }\n\n  return () => {\n    const now = Math.pow(10, 2) * +new Date();\n\n    if (now === last) {\n      repeat++;\n    } else {\n      repeat = 0;\n      last = now;\n    }\n\n    const s = (now + repeat).toString();\n    return +s.substr(s.length - length);\n  };\n}\n\nexport default nonce;\n","import Dispatcher from '../event';\nimport TokenManager from '../token-manager';\nimport { withTimeout } from '../util/timeout';\nimport { HttpClientRequestOptions, RequiresNewTokenFn } from './interfaces';\n\n/**\n * HTTP client that includes bearer token injection and refresh.\n */\nabstract class HttpClient extends Dispatcher {\n  /**\n   * Makes a request using the specified options.\n   *\n   * @param options The options to use when making the request\n   */\n  public static async request(options: HttpClientRequestOptions): Promise<Response> {\n    let res = await this._request(options, false);\n    if (this.newTokenRequired(res, options.requiresNewToken)) {\n      res = await this._request(options, true);\n    }\n    return res;\n  }\n\n  private static async _request(\n    options: HttpClientRequestOptions,\n    forceRenew: boolean,\n  ): Promise<Response> {\n    const { url, init, timeout } = options;\n    const headers = new Headers(init.headers);\n    if (!options.bypassAuthentication) {\n      const tokens = await TokenManager.getTokens({ forceRenew });\n      headers.set('authorization', `Bearer ${tokens.accessToken}`);\n    }\n    init.headers = headers;\n    return await withTimeout(fetch(url, init), timeout);\n  }\n\n  private static newTokenRequired(res: Response, requiresNewToken?: RequiresNewTokenFn) {\n    if (typeof requiresNewToken === 'function') {\n      return requiresNewToken(res);\n    }\n    return res.status === 401;\n  }\n}\n\nexport default HttpClient;\nexport { HttpClientRequestOptions, RequiresNewTokenFn };\n","class LocalStorage {\n  private storage: Storage;\n  constructor(persist = false) {\n    this.storage = persist ? window.localStorage : window.sessionStorage;\n  }\n\n  public get<T>(key: string): T | undefined {\n    const value = this.storage.getItem(key);\n    if (!value) {\n      return undefined;\n    }\n\n    return JSON.parse(value);\n  }\n\n  public set<T>(key: string, value: T) {\n    this.storage.setItem(key, JSON.stringify(value));\n  }\n\n  public remove(key: string) {\n    this.storage.removeItem(key);\n  }\n}\n\nexport default LocalStorage;\n"],"sourceRoot":""}